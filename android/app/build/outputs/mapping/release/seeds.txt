com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.internal.http2.Http2Connection$Listener$1: void onStream(okhttp3.internal.http2.Http2Stream)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.horcrux.svg.RenderableViewManager$CircleViewManager
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager()
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator
okhttp3.internal.http2.Http2Connection$7
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
okhttp3.internal.http2.Http2: int INITIAL_MAX_FRAME_SIZE
com.facebook.systrace.TraceListener
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
okhttp3.internal.cache2.Relay: okio.ByteString metadata()
okhttp3.internal.ws.WebSocketReader
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.facebook.react.bridge.NativeArray: java.lang.String toString()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
okhttp3.Call: okhttp3.Request request()
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
okhttp3.Cache$1: void trackConditionalCacheHit()
com.facebook.react.bridge.Callback
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.JSApplicationIllegalArgumentException
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.modules.core.TimingModule: void onHostResume()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String quotedAV()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewManager: android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.touch.JSResponderHandler)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.horcrux.svg.RenderableViewManager$DefsViewManager
okhttp3.ConnectionSpec$Builder
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
okhttp3.internal.platform.Platform: java.lang.String toString()
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection: java.io.OutputStream getOutputStream()
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.reactnativecommunity.webview.RNCWebViewManager: boolean mAllowsFullscreenVideo
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] findMatchingRule(java.lang.String[])
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.facebook.react.bridge.GuardedResultAsyncTask
okhttp3.internal.connection.RouteSelector: boolean hasNext()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
okhttp3.internal.http2.Http2Connection: long access$608(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.http2.Http2Connection: int nextStreamId
okhttp3.internal.http2.Header: java.lang.String TARGET_SCHEME_UTF8
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
com.facebook.react.views.textinput.ReactTextInputManager: void setBlurOnSubmit(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.views.slider.ReactSlider: double getStepValue()
okhttp3.internal.huc.OkHttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
okhttp3.internal.http2.Http2Codec: java.lang.String KEEP_ALIVE
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
okhttp3.Cache: void close()
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
okhttp3.ConnectionSpec: boolean isTls()
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
okhttp3.Request$Builder: Request$Builder()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
okhttp3.internal.platform.JdkWithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.Challenge: int hashCode()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.facebook.react.bridge.ReactNoCrashSoftException
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.horcrux.svg.RenderableViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(android.view.View,double)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate
okhttp3.internal.huc.OkHttpsURLConnection: void setUseCaches(boolean)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowUniversalAccessFromFileURLs(android.webkit.WebView,boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.facebook.react.bridge.ReactBridge: ReactBridge()
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
com.horcrux.svg.RenderableViewManager$UseViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.Internal: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
okhttp3.Cookie: boolean persistent()
okhttp3.CacheControl: int maxAgeSeconds()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
okhttp3.internal.huc.OkHttpsURLConnection: java.net.URL getURL()
okhttp3.Cache$CacheResponseBody: long contentLength()
okhttp3.Cache$CacheResponseBody
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: okhttp3.internal.http1.Http1Codec this$0
okhttp3.internal.huc.OkHttpURLConnection: void setRequestMethod(java.lang.String)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
okhttp3.Challenge: java.util.Map authParams
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.http2.Http2Reader$Handler: void windowUpdate(int,long)
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.modules.dialog.DialogModule
okhttp3.internal.http2.Http2Codec: okhttp3.internal.connection.StreamAllocation streamAllocation
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
okhttp3.internal.huc.OkHttpsURLConnection: boolean usingProxy()
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.RenderableViewManager: void setOpacity(com.horcrux.svg.VirtualView,float)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
com.horcrux.svg.SvgViewManager: void setMinX(com.horcrux.svg.SvgView,float)
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.horcrux.svg.VirtualView: void setName(java.lang.String)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,com.facebook.react.uimanager.UIImplementationProvider,int)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
okhttp3.ConnectionSpec$Builder: boolean tls
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
okhttp3.Request$Builder: java.util.Map tags
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
okhttp3.CacheControl$Builder
okhttp3.CacheControl: boolean noStore
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
okhttp3.internal.http2.Http2Connection: long awaitPingsSent
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
okhttp3.OkUrlFactory: okhttp3.internal.URLFilter urlFilter
com.facebook.react.views.slider.ReactSlider: int getTotalSteps()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
okhttp3.internal.cache.DiskLruCache: java.util.regex.Pattern LEGAL_KEY_PATTERN
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
okhttp3.internal.http2.Http2Stream: void receiveHeaders(java.util.List)
com.horcrux.svg.RenderableViewManager: void setStrokeLinecap(com.horcrux.svg.RenderableView,int)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode
com.facebook.react.bridge.ReactContext: void resetPerfStats()
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.http1.Http1Codec: boolean isClosed()
okhttp3.internal.http2.Http2Connection: long access$208(okhttp3.internal.http2.Http2Connection)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
okhttp3.Address: java.net.Proxy proxy
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
okhttp3.HttpUrl: java.util.List pathSegments
com.facebook.react.bridge.CatalystInstance
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
okhttp3.internal.http2.Http2Writer: int maxFrameSize
com.facebook.react.views.slider.ReactSlider
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String[] getAcceptedMimeType(java.lang.String[])
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_SHORT
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setWebViewClient(android.webkit.WebViewClient)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setInlineSize(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsFullscreenVideo(android.webkit.WebView,java.lang.Boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: void execute()
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String findMostSpecific(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()
com.facebook.react.modules.blob.BlobModule
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener
com.facebook.common.time.MonotonicClock
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
androidx.core.app.ComponentActivity: ComponentActivity()
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
com.horcrux.svg.SvgView: void setMinX(float)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
com.facebook.react.devsupport.LogBoxModule: android.view.View access$002(com.facebook.react.devsupport.LogBoxModule,android.view.View)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
okhttp3.internal.http2.Http2Connection: int DEGRADED_PING
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.horcrux.svg.DefinitionView
okhttp3.MediaType: java.lang.String mediaType
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
okhttp3.ConnectionPool$1
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
okhttp3.internal.http2.Http2Reader: boolean client
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)
okhttp3.RealCall: okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderField(java.lang.String)
okhttp3.internal.huc.BufferedRequestBody: void writeTo(okio.BufferedSink)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: int hashCode()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
okhttp3.OkUrlFactory$1
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
okhttp3.internal.http1.Http1Codec: okhttp3.OkHttpClient client
okhttp3.internal.http1.Http1Codec$AbstractSource: okio.ForwardingTimeout timeout
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
okhttp3.ResponseBody$1: ResponseBody$1(okhttp3.MediaType,long,okio.BufferedSource)
okhttp3.Cookie: long parseExpires(java.lang.String,int,int)
okhttp3.internal.connection.StreamAllocation: void cancel()
com.reactnativecommunity.webview.RNCWebViewManager: void setHardwareAccelerationDisabled(android.webkit.WebView,boolean)
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.facebook.soloader.SoLoader$Api14Utils
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Throwable callFailure
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
okhttp3.internal.http2.Http2Writer: int maxDataLength()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: long read(okio.Buffer,long)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setInstanceFollowRedirects(boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
com.facebook.react.bridge.ReactContext: void runOnJSQueueThread(java.lang.Runnable)
com.facebook.react.views.view.ReactViewManager
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.Cache: okhttp3.internal.cache.InternalCache internalCache
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.Cache: int writeAbortCount
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
okhttp3.MultipartBody: okhttp3.MediaType type()
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
okhttp3.internal.connection.RealConnection: int successCount
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTTP_METHOD_POST
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
okhttp3.internal.platform.Platform: Platform()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(com.horcrux.svg.PatternView,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
okhttp3.internal.cache.DiskLruCache: java.lang.String CLEAN
okhttp3.internal.ws.RealWebSocket$Close
okhttp3.OkHttpClient: okhttp3.Cache cache
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
okhttp3.internal.http2.Http2Connection: void flush()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
okhttp3.internal.http2.Http2Codec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
okhttp3.Dns$1: java.util.List lookup(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http1.Http1Codec$ChunkedSink: boolean closed
com.facebook.react.bridge.ReadableType
com.facebook.react.views.picker.ReactDialogPickerManager: void setPrompt(android.view.View,java.lang.String)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(int,okio.Source)
okhttp3.internal.cache2.Relay$RelaySource
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
okhttp3.Response: okhttp3.CacheControl cacheControl
com.horcrux.svg.SvgView: void setMeetOrSlice(int)
okio.ForwardingSink: java.lang.String toString()
okhttp3.internal.cache.CacheInterceptor: boolean isContentSpecificHeader(java.lang.String)
okhttp3.FormBody: java.lang.String value(int)
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache: void delete()
okhttp3.internal.JavaNetHeaders$1
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.picker.ReactPickerManager: void setColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String TAG
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.UIImplementationProvider,int)
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
okhttp3.internal.connection.RouteSelector: java.lang.String getHostString(java.net.InetSocketAddress)
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_BACKUP
okhttp3.CacheControl: boolean noStore()
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
com.facebook.react.views.picker.ReactPicker: void setStagedBackgroundColor(java.lang.Integer)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
okhttp3.Cache$CacheRequestImpl$1: okhttp3.internal.cache.DiskLruCache$Editor val$editor
okhttp3.internal.http2.Http2Connection: boolean $assertionsDisabled
com.facebook.react.modules.vibration.VibrationModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.modules.appearance.AppearanceModule
okhttp3.CacheControl: boolean mustRevalidate()
com.facebook.react.bridge.queue.NativeRunnable
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
okhttp3.HttpUrl: int port
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
com.horcrux.svg.RenderableViewManager$LineViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.LifecycleEventListener
okhttp3.internal.connection.StreamAllocation: boolean hasMoreRoutes()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
androidx.appcompat.widget.AlertDialogLayout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.webkit.WebView)
okhttp3.RealCall: void cancel()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
okhttp3.RealCall$1: RealCall$1(okhttp3.RealCall)
okhttp3.OkUrlFactory: okhttp3.OkUrlFactory setClient(okhttp3.OkHttpClient)
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.ResponseBody
okhttp3.internal.tls.DistinguishedNameParser: DistinguishedNameParser(javax.security.auth.x500.X500Principal)
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
okhttp3.internal.cache.DiskLruCache$2: void onException(java.io.IOException)
okhttp3.internal.http2.Header
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.reactnativecommunity.webview.RNCWebViewModule
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
okhttp3.internal.http2.Huffman: void buildTree()
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setRequestMethod(java.lang.String)
okhttp3.internal.http2.Http2Connection: long degradedPongDeadlineNs
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setReadTimeout(int)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
okhttp3.Cookie$Builder: Cookie$Builder()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_FLAG_CONTROL
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
okhttp3.internal.platform.Android10Platform: Android10Platform(java.lang.Class)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean requestIsUnrepeatable(java.io.IOException,okhttp3.Request)
okhttp3.internal.http2.Http2: byte TYPE_PING
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
okhttp3.internal.platform.Platform: boolean isConscryptPreferred()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
okhttp3.internal.http1.Http1Codec$AbstractSource: Http1Codec$AbstractSource(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1)
okhttp3.ConnectionPool: java.lang.Runnable cleanupRunnable
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.devsupport.JSDevSupport
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight[] values()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.horcrux.svg.RenderableViewManager$ImageViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
com.horcrux.svg.RenderableViewManager: void setVectorEffect(com.horcrux.svg.RenderableView,int)
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandlerWrapper
okhttp3.internal.tls.DistinguishedNameParser
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
okhttp3.internal.cache.DiskLruCache$3: java.lang.Object next()
okhttp3.RequestBody$2: int val$offset
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.Dispatcher: void setMaxRequests(int)
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.facebook.react.bridge.CatalystInstanceImpl: void access$1100(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
okhttp3.WebSocket
okhttp3.MultipartBody: okhttp3.MediaType FORM
okhttp3.internal.connection.RealConnection
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
okhttp3.Request
com.facebook.react.bridge.JavaMethodWrapper$7
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(java.net.URL,okhttp3.OkHttpClient)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getName()
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.facebook.react.devsupport.JSDevSupport: void onSuccess(java.lang.String)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing valueOf(java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
okhttp3.internal.platform.Platform: void log(int,java.lang.String,java.lang.Throwable)
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http1.Http1Codec$AbstractSource
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
okhttp3.internal.http1.Http1Codec$ChunkedSource: void readChunkSize()
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.react.bridge.queue.NativeRunnable: void run()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
okio.Timeout: okio.Timeout NONE
com.facebook.react.bridge.WritableMap
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)
androidx.appcompat.view.menu.ActionMenuItemView
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
okhttp3.HttpUrl: java.lang.String password
okhttp3.ResponseBody$BomAwareReader: boolean closed
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: RenderableViewManager$EllipseViewManager()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
okhttp3.internal.Version
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.internal.cache.CacheInterceptor$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.Response: okhttp3.Protocol protocol
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
okhttp3.internal.connection.RealConnection: java.lang.String toString()
okhttp3.RealCall: void enqueue(okhttp3.Callback)
okhttp3.internal.tls.DistinguishedNameParser: int beg
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
com.horcrux.svg.ImageView: void setHeight(com.facebook.react.bridge.Dynamic)
okhttp3.internal.io.FileSystem$1: boolean exists(java.io.File)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.horcrux.svg.RenderableView: void setPropList(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode)
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.horcrux.svg.RectView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
okhttp3.internal.http2.Http2Connection: long access$708(okhttp3.internal.http2.Http2Connection)
com.horcrux.svg.LineView: void setY1(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String access$000(okhttp3.internal.cache.DiskLruCache$Snapshot)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
okhttp3.Cache$1: okhttp3.Cache this$0
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager access$000(com.facebook.react.animated.NativeAnimatedModule)
okhttp3.Dispatcher: boolean $assertionsDisabled
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
okhttp3.Response$Builder: int code
okhttp3.Cache$CacheRequestImpl: void abort()
okhttp3.internal.http2.Settings: boolean isSet(int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration[] values()
okhttp3.internal.huc.OkHttpsURLConnection: void setConnectTimeout(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Handshake handshake
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.reactnativecommunity.webview.RNCWebViewManager: void setTextZoom(android.webkit.WebView,int)
okhttp3.Cache$Entry: boolean isHttps()
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
okhttp3.internal.http2.Header: java.lang.String TARGET_PATH_UTF8
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
androidx.appcompat.widget.AppCompatEditText
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
okhttp3.Cookie$Builder: java.lang.String value
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.react.modules.core.TimingModule: void initialize()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
okhttp3.internal.ws.RealWebSocket$PingRunnable
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getPostAnimationScrollY()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
okhttp3.internal.http1.Http1Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.internal.http2.Http2Stream: boolean $assertionsDisabled
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue access$500(com.facebook.react.animated.NativeAnimatedModule)
okhttp3.Request: okhttp3.RequestBody body
com.reactnativecommunity.webview.RNCWebViewManager: void setMediaPlaybackRequiresUserAction(android.webkit.WebView,boolean)
com.facebook.react.views.picker.ReactDialogPickerManager: void setEnabled(android.view.View,boolean)
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Http2Codec: Http2Codec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection)
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.horcrux.svg.RenderableViewManager$GroupViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
okhttp3.internal.huc.OkHttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDefaultUseCaches()
okio.Timeout: void throwIfReached()
okhttp3.internal.http.RetryAndFollowUpInterceptor: java.lang.Object callStackTrace
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
okhttp3.HttpUrl: java.lang.String encodedUsername()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
okhttp3.internal.huc.DelegatingHttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
okhttp3.Cache$2: boolean hasNext()
com.facebook.yoga.YogaNodeJNIBase: float[] arr
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
okhttp3.internal.http2.Http2: byte FLAG_ACK
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient,boolean)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.http2.Huffman: void addCode(int,int,byte)
okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)
com.facebook.react.modules.appregistry.AppRegistry
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
okhttp3.internal.tls.DistinguishedNameParser: int end
com.facebook.react.modules.datepicker.DatePickerDialogModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.internal.cache.DiskLruCache$2
com.horcrux.svg.RenderableViewManager: void setPropList(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
okhttp3.internal.connection.StreamAllocation: boolean canceled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.facebook.react.views.picker.ReactDialogPickerManager: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
okhttp3.internal.Util: java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[])
okhttp3.MultipartBody$Builder: java.util.List parts
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
okhttp3.internal.http2.Http2Writer: void dataFrame(int,byte,okio.Buffer,int)
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.NativeModule: void initialize()
com.facebook.react.views.text.ReactBaseTextShadowNode
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.facebook.react.devsupport.JSDevSupport: java.util.Map getTypedExportedConstants()
com.facebook.react.views.picker.ReactPicker: void setStagedSelection(int)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
okhttp3.internal.huc.OutputStreamRequestBody$1: void flush()
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableViewManager$SVGClass svgClass
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
okhttp3.RealCall$AsyncCall: okhttp3.Callback responseCallback
okhttp3.HttpUrl: java.lang.String toString()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
okhttp3.Cache$CacheResponseBody$1
com.reactnativecommunity.webview.RNCWebViewManager: void setScalesPageToFit(android.webkit.WebView,boolean)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
okhttp3.internal.http1.Http1Codec$FixedLengthSource
okhttp3.ConnectionPool$1: void run()
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate sAccessibilityDelegate
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
okhttp3.internal.Util$2: Util$2(java.lang.String,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
okhttp3.internal.Util: java.util.regex.Pattern VERIFY_AS_IP_ADDRESS
com.horcrux.svg.SvgView: void setBbWidth(com.facebook.react.bridge.Dynamic)
okhttp3.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL)
com.facebook.react.modules.network.NetworkingModule: java.lang.String getName()
com.facebook.react.bridge.ReactApplicationContext
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoaded(android.webkit.WebView,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Connection$5: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
okhttp3.internal.io.FileSystem$1: void deleteContents(java.io.File)
okhttp3.OkHttpClient: java.util.List connectionSpecs
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
okhttp3.internal.http1.Http1Codec$ChunkedSource: void close()
com.facebook.react.modules.fabric.ReactFabric
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
okhttp3.internal.ws.RealWebSocket: java.util.Random random
okhttp3.internal.Util: okio.ByteString UTF_16_LE_BOM
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
okhttp3.internal.ws.RealWebSocket$Message: RealWebSocket$Message(int,okio.ByteString)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
okhttp3.CipherSuite: java.lang.String javaName()
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getUseCaches()
okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
okhttp3.internal.http.HttpDate
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
okhttp3.internal.Internal: void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http.CallServerInterceptor$CountingSink: void write(okio.Buffer,long)
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor(com.facebook.react.bridge.JavaMethodWrapper$1)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.modules.storage.AsyncStorageModule: boolean access$000(com.facebook.react.modules.storage.AsyncStorageModule)
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getRequestMethod()
com.horcrux.svg.RenderableViewManager: java.lang.String getName()
okhttp3.internal.http2.Http2: Http2()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
okhttp3.internal.cache.InternalCache: void remove(okhttp3.Request)
okhttp3.internal.http.HttpHeaders: java.lang.String readQuotedString(okio.Buffer)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
okhttp3.internal.http2.Huffman
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String toString()
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
com.horcrux.svg.SvgViewManager: java.lang.String getName()
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
okhttp3.Address: java.util.List protocols
okhttp3.internal.http1.Http1Codec$ChunkedSource: Http1Codec$ChunkedSource(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl)
okhttp3.ResponseBody$1: long val$contentLength
okhttp3.Cache$2: boolean canRemove
com.facebook.react.ReactRootView: void setIsFabric(boolean)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
okhttp3.internal.huc.DelegatingHttpsURLConnection
com.facebook.react.bridge.NativeModuleCallExceptionHandler
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
okhttp3.internal.ws.RealWebSocket$2: okhttp3.internal.ws.RealWebSocket this$0
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(android.view.View,java.lang.Integer)
okhttp3.internal.cache2.Relay$RelaySource: void close()
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.cache.DiskLruCache: void trimToSize()
okhttp3.MultipartBody: long contentLength()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
okhttp3.internal.http2.Http2Connection$7: int val$streamId
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
okhttp3.Address: boolean equalsNonHost(okhttp3.Address)
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void close()
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
okhttp3.HttpUrl: java.net.URI uri()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
okhttp3.Headers: java.util.Map toMultimap()
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
okhttp3.CacheControl: java.lang.String toString()
com.horcrux.svg.TSpanView: void setContent(java.lang.String)
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
okhttp3.internal.http2.Http2Connection: long degradedPingsSent
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean inputExhausted
okhttp3.Cache$2: okhttp3.Cache this$0
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
okhttp3.RealCall: okio.AsyncTimeout timeout
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
okhttp3.internal.Version: Version()
okhttp3.internal.http.RealInterceptorChain: int connectTimeout
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
okhttp3.Protocol: okhttp3.Protocol[] values()
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
okio.AsyncTimeout: boolean exit()
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.huc.OkHttpURLConnection: void setFixedLengthStreamingMode(long)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setOpacity(android.view.View,float)
com.horcrux.svg.SvgView
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
okhttp3.ConnectionPool: java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper$1
okhttp3.internal.cache.DiskLruCache$Entry
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String defaultUserAgent()
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(com.horcrux.svg.MaskView,int)
okhttp3.internal.connection.StreamAllocation: void release()
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
okhttp3.Response$Builder: okhttp3.Handshake handshake
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
okhttp3.internal.http2.Http2: byte TYPE_WINDOW_UPDATE
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration)
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide valueOf(java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.react.animated.NativeAnimatedModule: java.lang.String getName()
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
okhttp3.internal.http2.Http2Connection$3: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.Inspector
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits[] values()
okhttp3.internal.cache.CacheInterceptor: boolean isEndToEnd(java.lang.String)
com.horcrux.svg.VirtualView: void setOpacity(float)
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
okhttp3.internal.connection.RealConnection$1
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.facebook.common.internal.DoNotStrip
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.bridge.GuardedRunnable: void run()
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: int mViewManagerConstantsCacheSize
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Writer: void synStream(boolean,int,int,java.util.List)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.facebook.react.bridge.queue.MessageQueueThread
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
okhttp3.FormBody$Builder: FormBody$Builder()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findJvmPlatform()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
okhttp3.internal.cache.CacheStrategy: boolean isCacheable(okhttp3.Response,okhttp3.Request)
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setBaselineShift(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
okhttp3.internal.cache.DiskLruCache$3
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
okhttp3.OkUrlFactory$1: java.lang.String val$protocol
okhttp3.OkHttpClient$Builder: okhttp3.internal.cache.InternalCache internalCache
okhttp3.OkHttpClient: int pingInterval
okhttp3.internal.http2.Http2: byte TYPE_PRIORITY
okhttp3.internal.huc.OutputStreamRequestBody$1: long val$expectedContentLength
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView createRNCWebViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
okhttp3.internal.http1.Http1Codec: okhttp3.internal.connection.StreamAllocation streamAllocation
okhttp3.HttpUrl$Builder
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode()
com.facebook.react.common.futures.SimpleSettableFuture
com.horcrux.svg.TextPathView: void setMethod(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.facebook.react.views.slider.ReactSliderManager
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
okhttp3.internal.http1.Http1Codec$AbstractSource: long read(okio.Buffer,long)
com.horcrux.svg.RenderableViewManager: void setName(com.horcrux.svg.VirtualView,java.lang.String)
okhttp3.internal.Util$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Dispatcher: java.util.Deque readyAsyncCalls
com.facebook.react.bridge.JSIModulePackage
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
com.facebook.react.bridge.Inspector$Page
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
com.horcrux.svg.RenderableViewManager: void setStrokeDasharray(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
okio.ForwardingSource: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.react.views.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
okhttp3.internal.ws.RealWebSocket$CancelRunnable: RealWebSocket$CancelRunnable(okhttp3.internal.ws.RealWebSocket)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactContext: void setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.cache.DiskLruCache$Editor: void detach()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
okhttp3.Cookie: boolean hostOnly
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskTransform(com.horcrux.svg.MaskView,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()
okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)
okhttp3.internal.cache.DiskLruCache$1: DiskLruCache$1(okhttp3.internal.cache.DiskLruCache)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getContentType()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.facebook.react.bridge.ModuleHolder
com.facebook.react.modules.statusbar.StatusBarModule
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.horcrux.svg.RenderableViewManager: void decomposeMatrix()
com.facebook.react.bridge.MemoryPressure
okhttp3.internal.Util: java.util.List immutableList(java.util.List)
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
okhttp3.Cookie$Builder: java.lang.String name
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Object access$000(okhttp3.internal.huc.OkHttpURLConnection)
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
okhttp3.Response: long receivedResponseAtMillis
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(com.horcrux.svg.TextPathView,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
okhttp3.internal.platform.Platform: int WARN
okhttp3.internal.ws.RealWebSocket: void awaitTermination(int,java.util.concurrent.TimeUnit)
com.horcrux.svg.SvgView: void setMinY(float)
com.horcrux.svg.TextPathView: void setStartOffset(com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccess(android.webkit.WebView,java.lang.Boolean)
okhttp3.internal.http2.Http2Connection$4: java.util.List val$requestHeaders
okhttp3.Handshake: int hashCode()
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
okhttp3.OkHttpClient: int connectTimeoutMillis()
okhttp3.internal.cache.DiskLruCache$Snapshot
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
okhttp3.HttpUrl: java.util.List pathSegments()
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.internal.cache.CacheInterceptor$1: okio.BufferedSource val$source
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String hexAV()
com.facebook.jni.HybridClassBase: HybridClassBase()
com.facebook.react.jscexecutor.JSCExecutor
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
okhttp3.internal.http2.Http2
okhttp3.RealCall: okhttp3.EventListener eventListener
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)
com.facebook.react.devsupport.LogBoxModule: android.app.Activity access$300(com.facebook.react.devsupport.LogBoxModule)
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
okhttp3.MultipartBody: okhttp3.MediaType contentType()
com.facebook.react.views.picker.ReactPicker: void setOnSelectListener(com.facebook.react.views.picker.ReactPicker$OnSelectListener)
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.WritableNativeArray)
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
okhttp3.internal.platform.AndroidPlatform$CloseGuard: AndroidPlatform$CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
com.horcrux.svg.SvgViewManager: void setColor(com.horcrux.svg.SvgView,java.lang.Integer)
okhttp3.EventListener$2: okhttp3.EventListener create(okhttp3.Call)
com.horcrux.svg.RenderableView: void setStrokeLinecap(int)
okhttp3.ResponseBody: ResponseBody()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.horcrux.svg.TextView: void setBaselineShift(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableView: void setStrokeOpacity(float)
com.facebook.react.views.picker.ReactDialogPickerManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderFieldKey(int)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
okhttp3.internal.cache.DiskLruCache: void evictAll()
com.facebook.react.bridge.DynamicFromArray: void recycle()
okhttp3.internal.http2.Http2Reader$Handler: void priority(int,int,int,boolean)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: boolean completed
com.horcrux.svg.RenderableViewManager$TextViewManager: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(com.horcrux.svg.SymbolView,float)
okhttp3.FormBody: java.lang.String encodedName(int)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.horcrux.svg.SvgViewModule: SvgViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(android.webkit.WebView,boolean)
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
okhttp3.ConnectionPool: int connectionCount()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight valueOf(java.lang.String)
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
okhttp3.Headers: java.util.Date getDate(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.facebook.jni.annotations.DoNotStrip
okhttp3.RequestBody$1
okhttp3.internal.huc.DelegatingHttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
okhttp3.CertificatePinner$Pin: java.lang.String WILDCARD
com.facebook.react.bridge.PromiseImpl
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getCipherSuite()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.huc.OkHttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.facebook.react.bridge.queue.NativeRunnable: com.facebook.jni.HybridData mHybridData
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
okhttp3.internal.http2.Settings: int[] values
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[])
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.horcrux.svg.SvgView: void setTintColor(java.lang.Integer)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
okhttp3.internal.tls.OkHostnameVerifier: int ALT_DNS_NAME
com.facebook.react.modules.share.ShareModule: java.lang.String getName()
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
okhttp3.internal.Internal: okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request)
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okhttp3.internal.cache.DiskLruCache$Snapshot)
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
okhttp3.internal.huc.BufferedRequestBody: BufferedRequestBody(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
okhttp3.internal.http2.Http2Connection: long access$108(okhttp3.internal.http2.Http2Connection)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean)
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
okhttp3.internal.http2.Http2Connection: long intervalPingsSent
okhttp3.Interceptor$Chain: okhttp3.Request request()
com.horcrux.svg.MaskView: void setY(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
okhttp3.internal.ws.RealWebSocket$2: RealWebSocket$2(okhttp3.internal.ws.RealWebSocket,okhttp3.Request)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
okhttp3.Cache: void remove(okhttp3.Request)
com.facebook.react.common.LifecycleState
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
com.reactnativecommunity.webview.RNCWebViewModule: android.webkit.ValueCallback filePathCallbackLegacy
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
okhttp3.HttpUrl: java.lang.String password()
com.facebook.react.views.text.ReactTextShadowNode
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
okhttp3.internal.ws.RealWebSocket: long queueSize()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.views.picker.ReactDropdownPickerManager: void setColor(android.view.View,java.lang.Integer)
okhttp3.internal.Util: okio.ByteString UTF_8_BOM
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
okhttp3.internal.http.RequestLine
com.horcrux.svg.RenderableViewManager: boolean isZero(double)
okhttp3.CipherSuite: java.lang.String toString()
com.reactnativecommunity.webview.RNCWebViewModule: com.facebook.react.modules.core.PermissionListener webviewFileDownloaderPermissionListener
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
okhttp3.internal.http2.Http2Connection$PingRunnable: int payload1
okhttp3.internal.Util: java.util.Map immutableMap(java.util.Map)
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
com.facebook.react.bridge.SoftAssertions
com.reactnativecommunity.webview.RNCWebViewManager: int SHOULD_OVERRIDE_URL_LOADING_TIMEOUT
okhttp3.internal.http2.Header: java.lang.String TARGET_METHOD_UTF8
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
okhttp3.Protocol: okhttp3.Protocol QUIC
okhttp3.internal.huc.OutputStreamRequestBody: long contentLength()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.horcrux.svg.TextView: void setVerticalAlign(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.facebook.react.views.picker.ReactPickerManager: ReactPickerManager()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
okhttp3.Cache$CacheRequestImpl$1
okhttp3.Response: okhttp3.Headers headers
okhttp3.Interceptor$Chain
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
okhttp3.internal.http2.Hpack$Writer
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.jni.IteratorHelper: java.lang.Object mElement
okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.facebook.react.bridge.JSIModuleSpec
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
okhttp3.internal.cache.DiskLruCache$2: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
okhttp3.RealCall: boolean executed
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.Arguments
okhttp3.internal.platform.AndroidPlatform: boolean supportsAlpn()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
okhttp3.ResponseBody$1: okhttp3.MediaType contentType()
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.http.RealInterceptorChain: int writeTimeout
com.facebook.react.bridge.JSBundleLoader
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
okhttp3.OkUrlFactory: okhttp3.OkHttpClient client
okhttp3.internal.http.HttpDate$1: HttpDate$1()
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
okhttp3.Cache$Entry: java.lang.String url
okhttp3.internal.platform.Android10Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.Connection
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
okhttp3.ResponseBody: okio.BufferedSource source()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
okhttp3.OkHttpClient$Builder: boolean followRedirects
okhttp3.MultipartBody: java.util.List parts()
okhttp3.internal.http2.PushObserver
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.facebook.react.bridge.JSIModuleRegistry
okhttp3.internal.NamedRunnable: void run()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
okhttp3.internal.http2.Settings: Settings()
okhttp3.internal.http2.Huffman$Node: int symbol
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine[] values()
okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
com.facebook.react.modules.core.TimingModule
com.facebook.react.bridge.ReadableArray: double getDouble(int)
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
okhttp3.Protocol: okhttp3.Protocol HTTP_2
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Permission getPermission()
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpCodec
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_GO_FORWARD
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
okhttp3.HttpUrl: java.net.URL url()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
okhttp3.WebSocketListener
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.horcrux.svg.SymbolView: void setAlign(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTML_ENCODING
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
okhttp3.internal.huc.OutputStreamRequestBody: boolean closed
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
okhttp3.Headers: Headers(okhttp3.Headers$Builder)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: Http2Connection$IntervalPingRunnable(okhttp3.internal.http2.Http2Connection)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
okhttp3.OkHttpClient$Builder: int readTimeout
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)
okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
okhttp3.internal.http1.Http1Codec: void writeRequest(okhttp3.Headers,java.lang.String)
com.facebook.react.bridge.DynamicFromArray: int asInt()
okhttp3.internal.http.StatusLine: java.lang.String toString()
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.facebook.react.views.image.ReactImageManager
okhttp3.internal.http.HttpDate$1
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setEnabled(android.view.View,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
okhttp3.internal.http2.Http2Stream: long bytesLeftInWriteWindow
com.horcrux.svg.LineView
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
okhttp3.internal.platform.Platform: boolean isAndroid()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String responseSourceHeader(okhttp3.Response)
okhttp3.internal.io.FileSystem: long size(java.io.File)
com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair touchSubsequence(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
okhttp3.internal.platform.Platform
com.horcrux.svg.RenderableView: void setVectorEffect(int)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
okhttp3.internal.ws.WebSocketReader: void readMessage()
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.ResponseBody: long contentLength()
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.reactnativecommunity.webview.RNCWebViewModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
okhttp3.internal.http2.Http2Reader$Handler: void data(boolean,int,okio.BufferedSource,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptForMainFrameOnly(android.webkit.WebView,boolean)
com.facebook.react.views.picker.ReactDialogPickerManager: void setSelected(android.view.View,int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDefaultUseCaches(boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.Object getContent(java.lang.Class[])
okhttp3.internal.http2.Http2: byte TYPE_HEADERS
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_FORM_DATA
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getInstanceFollowRedirects()
okhttp3.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL,java.net.Proxy)
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
androidx.appcompat.widget.AppCompatAutoCompleteTextView
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(com.horcrux.svg.PatternView,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.view.GenericDraweeView
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
okhttp3.HttpUrl: int port()
okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void flush()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
okhttp3.internal.connection.ConnectInterceptor
com.horcrux.svg.TextView: void setRotate(com.facebook.react.bridge.Dynamic)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: boolean proceed
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getFileChooserIntent(java.lang.String[],boolean)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_POST_MESSAGE
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
okio.AsyncTimeout: boolean cancelScheduledTimeout(okio.AsyncTimeout)
okhttp3.JavaNetCookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
okhttp3.internal.http1.Http1Codec$ChunkedSink: okio.Timeout timeout()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
okio.AsyncTimeout: AsyncTimeout()
okhttp3.Dispatcher: void finished(okhttp3.RealCall)
okhttp3.ConnectionPool: int idleConnectionCount()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.facebook.react.bridge.JSCJavaScriptExecutor
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.facebook.react.animated.NativeAnimatedModule: void executeAllOperations(java.util.Queue,long)
com.horcrux.svg.RenderableViewManager: void setFillRule(com.horcrux.svg.RenderableView,int)
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)
okhttp3.CertificatePinner$Pin: java.lang.String canonicalHostname
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
okhttp3.internal.huc.OutputStreamRequestBody: java.io.OutputStream outputStream()
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MAXDATE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
okhttp3.Cache$CacheRequestImpl: Cache$CacheRequestImpl(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.Dispatcher: int getMaxRequests()
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
okhttp3.JavaNetCookieJar
com.horcrux.svg.CircleView: void setR(com.facebook.react.bridge.Dynamic)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
okhttp3.HttpUrl: java.lang.String query()
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.views.picker.ReactDialogPickerManager: void setBackgroundColor(android.view.View,java.lang.Integer)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
okhttp3.Response: boolean isRedirect()
okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
okhttp3.internal.http2.Http2Connection: void writePing()
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
okhttp3.RequestBody$2: okhttp3.MediaType val$contentType
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
okhttp3.internal.cache.DiskLruCache
okhttp3.internal.huc.OkHttpsURLConnection: long getHeaderFieldDate(java.lang.String,long)
okhttp3.internal.http2.Http2Connection$Listener
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.blob.BlobModule: void initialize()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
okhttp3.internal.http2.Http2Connection$2: okhttp3.internal.http2.Http2Connection this$0
okhttp3.CertificatePinner$Pin: okio.ByteString hash
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
com.facebook.react.fabric.events.FabricEventEmitter
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider getProvider()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.http2.Http2Connection: boolean shutdown
okhttp3.internal.http1.Http1Codec$FixedLengthSource: void close()
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
okhttp3.internal.http2.Http2Connection$5
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.facebook.react.bridge.queue.MessageQueueThreadImpl
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode)
okhttp3.internal.huc.OkHttpURLConnection: boolean getInstanceFollowRedirects()
okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
okhttp3.Call: boolean isExecuted()
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
com.facebook.react.bridge.NativeMap
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
okhttp3.Dns: okhttp3.Dns SYSTEM
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
okhttp3.internal.http2.Hpack$Writer: void setHeaderTableSizeSetting(int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
okhttp3.internal.platform.AndroidPlatform$CloseGuard
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator
okhttp3.Cookie: boolean persistent
okhttp3.WebSocket: boolean send(okio.ByteString)
okhttp3.ResponseBody$1: okhttp3.MediaType val$contentType
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.appstate.AppStateModule: java.lang.String TAG
okhttp3.internal.http2.Http2Connection: boolean client
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.horcrux.svg.RenderableViewManager$RenderableShadowNode: void ignoreLayoutProps(int,com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.DiskLruCache$3: void remove()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
okhttp3.internal.http2.Http2Connection$Listener$1
okhttp3.Request: okhttp3.RequestBody body()
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV1
okhttp3.RequestBody$1: okio.ByteString val$content
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
okhttp3.internal.ws.WebSocketProtocol: int B1_MASK_LENGTH
okhttp3.internal.http1.Http1Codec$FixedLengthSource: long bytesRemaining
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
okhttp3.EventListener: void callStart(okhttp3.Call)
okhttp3.internal.platform.OptionalMethod: boolean isSupported(java.lang.Object)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
okio.Timeout: long deadlineNanoTime()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.common.time.MonotonicClock: long now()
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.Response$Builder: okhttp3.Request request
okhttp3.CipherSuite$1: int compare(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$LineViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.cert.Certificate[] getLocalCertificates()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http.RealInterceptorChain: int index
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
androidx.lifecycle.FullLifecycleObserverAdapter
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)
okhttp3.internal.http2.Http2Codec: okhttp3.Protocol protocol
com.horcrux.svg.PatternView: void setX(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactMarker$MarkerListener
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
okhttp3.internal.ws.WebSocketProtocol: long CLOSE_MESSAGE_MAX
okhttp3.TlsVersion: java.util.List forJavaNames(java.lang.String[])
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
okhttp3.internal.ws.RealWebSocket: void checkResponse(okhttp3.Response)
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
okhttp3.CertificatePinner$Pin: java.lang.String toString()
okhttp3.internal.http2.Http2Connection$PingRunnable: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.horcrux.svg.ImageView: void setMeetOrSlice(int)
okhttp3.internal.huc.OkHttpsURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
okhttp3.Cache$CacheResponseBody$1: okhttp3.internal.cache.DiskLruCache$Snapshot val$snapshot
okhttp3.internal.http1.Http1Codec$AbstractSource: boolean closed
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getHeaderFieldLong(java.lang.String,long)
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
okhttp3.internal.huc.OutputStreamRequestBody: okhttp3.Request prepareToSendRequest(okhttp3.Request)
okhttp3.internal.Util: boolean isAndroidGetsocknameError(java.lang.AssertionError)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsHorizontalScrollIndicator(android.webkit.WebView,boolean)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getRequestProperty(java.lang.String)
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: JdkWithJettyBootPlatform$JettyNegoProvider(java.util.List)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.platform.AndroidPlatform: int MAX_LOG_LENGTH
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.facebook.react.bridge.CxxModuleWrapperBase
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.horcrux.svg.LinearGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
okhttp3.ConnectionPool$1: ConnectionPool$1(okhttp3.ConnectionPool)
okhttp3.Address: okhttp3.HttpUrl url()
okhttp3.internal.http2.Settings: int getMaxHeaderListSize(int)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
okhttp3.Dispatcher: java.util.Deque runningAsyncCalls
okhttp3.Headers: long byteCount()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
okhttp3.Response: int code()
okhttp3.Address: java.net.Proxy proxy()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
okhttp3.internal.connection.RealConnection$1: void close()
okhttp3.ConnectionSpec: java.util.List tlsVersions()
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setConnectTimeout(int)
okhttp3.internal.ws.RealWebSocket$PingRunnable: void run()
okhttp3.internal.ws.WebSocketReader: void readHeader()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateEventEmitterMountItem(int,java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
okhttp3.Route: int hashCode()
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,byte,byte)
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
okhttp3.Dispatcher: java.util.Deque runningSyncCalls
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: NativeDevSplitBundleLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getName()
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.WebViewConfig mWebViewConfig
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.facebook.fbreact.specs.NativeTimingSpec
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,long,boolean,boolean)
com.reactnativecommunity.webview.RNCWebViewModule$MimeType: com.reactnativecommunity.webview.RNCWebViewModule$MimeType[] values()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getContentType()
okhttp3.internal.http2.Hpack: int PREFIX_4_BITS
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$100(com.facebook.react.uimanager.UIManagerModule)
okhttp3.internal.JavaNetHeaders$1: int compare(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
okhttp3.EventListener$2
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.fabric.ComponentFactory
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException
okhttp3.internal.http1.Http1Codec: void detachTimeout(okio.ForwardingTimeout)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
okhttp3.internal.http2.Http2Connection$6: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.horcrux.svg.UseView: void setY(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType valueOf(java.lang.String)
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
okhttp3.internal.http2.Http2Connection$5: int val$streamId
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderField(java.lang.String)
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.horcrux.svg.RenderableViewManager$PathViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Http2Connection: okhttp3.Protocol getProtocol()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
okhttp3.internal.http2.Http2Codec: java.lang.String UPGRADE
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$300(com.facebook.react.modules.dialog.DialogModule)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] PREVAILING_RULE
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.jni.DestructorThread$Destructor: void destruct()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.reactnativecommunity.webview.RNCWebViewManager: void setIncognito(android.webkit.WebView,boolean)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
okhttp3.Response: okhttp3.Response$Builder newBuilder()
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
okhttp3.internal.cache.DiskLruCache: void close()
okhttp3.Route: java.net.InetSocketAddress socketAddress()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getExpiration()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
okhttp3.CacheControl$Builder: boolean noTransform
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
okhttp3.Cache$CacheRequestImpl: okhttp3.Cache this$0
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
okhttp3.Headers: int hashCode()
okhttp3.RealCall$AsyncCall
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
okhttp3.internal.cache.DiskLruCache: void flush()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsImages(java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
okhttp3.Headers: int size()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.progressbar.ProgressBarShadowNode
com.facebook.fbreact.specs.NativeAppearanceSpec
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
okhttp3.internal.huc.OkHttpsURLConnection: okhttp3.Handshake handshake()
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_TEMP
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.debug.DevSettingsModule: void reload()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScript(android.webkit.WebView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Settings: int getHeaderTableSize()
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.horcrux.svg.SymbolView: void setMinY(float)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.internal.cache.InternalCache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.SvgViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDoInput()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: StreamAllocation$StreamAllocationReference(okhttp3.internal.connection.StreamAllocation,java.lang.Object)
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
okhttp3.internal.NamedRunnable: java.lang.String name
okhttp3.ConnectionPool: boolean $assertionsDisabled
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String getName()
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.reactnativecommunity.webview.RNCWebViewModule: int PICKER
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
okhttp3.OkUrlFactory$1: java.net.URLConnection openConnection(java.net.URL)
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.horcrux.svg.SvgViewManager: void setAlign(com.horcrux.svg.SvgView,java.lang.String)
okhttp3.internal.http2.Settings
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.facebook.react.bridge.ReadableArray: int getInt(int)
okhttp3.internal.ws.WebSocketWriter$FrameSink: void close()
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.WebSocketWriter$FrameSink frameSink
com.horcrux.svg.VirtualView: double getCanvasDiagonal()
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
okhttp3.internal.http2.Http2Writer: void flush()
com.facebook.react.bridge.ModuleSpec: java.lang.Class mType
com.horcrux.svg.SvgViewModule
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
okhttp3.internal.JavaNetHeaders: java.util.Map toMultimap(okhttp3.Headers,java.lang.String)
androidx.core.graphics.drawable.IconCompat
com.facebook.react.bridge.MemoryPressureListener
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
okhttp3.HttpUrl$Builder: void removeAllCanonicalQueryParameters(java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
okhttp3.Headers: java.lang.String get(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
okhttp3.CacheControl: boolean isPrivate()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.facebook.react.bridge.JSIModule: void initialize()
okhttp3.internal.http1.Http1Codec$FixedLengthSink: boolean closed
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
okhttp3.internal.platform.AndroidPlatform
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.reactnativecommunity.webview.RNCWebViewModule: boolean startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String[],boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
okhttp3.internal.Util: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
okhttp3.internal.ws.RealWebSocket: int receivedPingCount()
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
com.facebook.react.bridge.ReactSoftException: void addListener(com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
androidx.appcompat.widget.AppCompatCheckBox
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http1.Http1Codec: okio.BufferedSource source
okhttp3.CacheControl$Builder: boolean immutable
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file
okhttp3.Response: okhttp3.Handshake handshake()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.facebook.react.bridge.DynamicFromMap$1
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
com.reactnativecommunity.webview.RNCWebViewModule: boolean grantFileDownloaderPermissions()
okhttp3.internal.tls.BasicTrustRootIndex
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.horcrux.svg.TextView: void setMethod(java.lang.String)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration valueOf(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver)
okhttp3.RequestBody$2: byte[] val$content
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.bridge.JavaOnlyMap
com.facebook.react.bridge.queue.MessageQueueThreadHandler
com.facebook.react.modules.core.TimingModule: java.lang.String getName()
okhttp3.Challenge: boolean equals(java.lang.Object)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.NativeModule: java.lang.String getName()
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog mLogBoxDialog
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Header$Listener access$100(okhttp3.internal.http2.Http2Stream)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
okhttp3.Cookie: java.lang.String value
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.drawee.view.SimpleDraweeView
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.horcrux.svg.RenderableViewManager$UseViewManager: RenderableViewManager$UseViewManager()
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http2.Http2Codec: void flushRequest()
okhttp3.internal.platform.Jdk9Platform: java.lang.reflect.Method setProtocolMethod
okhttp3.internal.http2.Http2Connection: long degradedPongsReceived
com.sudokunative.MainActivity
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$400(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: int getPostAnimationScrollX()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec()
okhttp3.CipherSuite$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_CCM_8_SHA256
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_DATE
com.reactnativecommunity.webview.RNCWebViewModule: int FILE_DOWNLOAD_PERMISSION_REQUEST
okhttp3.RealCall: boolean isCanceled()
okhttp3.ResponseBody$BomAwareReader: java.nio.charset.Charset charset
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
okhttp3.internal.http2.Header: java.lang.String RESPONSE_STATUS_UTF8
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
okhttp3.JavaNetCookieJar: JavaNetCookieJar(java.net.CookieHandler)
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
okhttp3.internal.publicsuffix.PublicSuffixDatabase
okhttp3.internal.http2.Hpack: int PREFIX_6_BITS
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)
com.facebook.react.bridge.CatalystInstanceImpl$4
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setFixedLengthStreamingMode(int)
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
okhttp3.internal.huc.OkHttpURLConnection: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
okhttp3.internal.http.BridgeInterceptor
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
okhttp3.Cache$1: void trackResponse(okhttp3.internal.cache.CacheStrategy)
com.facebook.react.bridge.CatalystInstanceImpl$3
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
okhttp3.internal.http1.Http1Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
okhttp3.internal.cache2.Relay
okhttp3.HttpUrl$Builder: java.lang.String INVALID_HOST
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.horcrux.svg.EllipseView
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.views.picker.ReactPicker: int getMode()
okhttp3.internal.ws.WebSocketWriter
com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
okhttp3.CipherSuite: java.lang.String secondaryName(java.lang.String)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.internal.URLFilter: void checkURLPermitted(java.net.URL)
com.facebook.react.modules.network.NetworkingModule: void initialize()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode fromHttp2(int)
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheMode(android.webkit.WebView,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.horcrux.svg.VirtualView: float getCanvasWidth()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
okhttp3.OkHttpClient$Builder: java.util.List protocols
okhttp3.HttpUrl: java.lang.String url
okhttp3.internal.http2.Http2Connection: void awaitPong()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.views.picker.ReactDialogPickerManager: void setBackgroundColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)
com.facebook.jni.ThreadScopeSupport
com.facebook.react.bridge.ReactMethod
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.internal.huc.OkHttpsURLConnection: void setDoInput(boolean)
okhttp3.Dispatcher: void executed(okhttp3.RealCall)
com.horcrux.svg.RectView: void setY(com.facebook.react.bridge.Dynamic)
okhttp3.Response: okhttp3.Response networkResponse
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.MultipartBody: int size()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewModule getModule(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
com.facebook.react.bridge.DynamicFromArray: double asDouble()
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
okhttp3.internal.Internal: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Connection$5: boolean val$inFinished
com.horcrux.svg.RenderableViewManager$LinearGradientManager: RenderableViewManager$LinearGradientManager()
com.horcrux.svg.SvgView: void setAlign(java.lang.String)
com.facebook.react.bridge.ModuleHolder: void destroy()
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
okhttp3.internal.http.HttpHeaders: int parseSeconds(java.lang.String,int)
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
okhttp3.internal.platform.Jdk9Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.text.ReactVirtualTextShadowNode
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: OkHttpURLConnection$NetworkInterceptor(okhttp3.internal.huc.OkHttpURLConnection)
okhttp3.Request: Request(okhttp3.Request$Builder)
okhttp3.internal.http1.Http1Codec: okhttp3.Headers readHeaders()
okhttp3.Cookie: java.lang.String domain()
com.facebook.react.bridge.UiThreadUtil
okhttp3.internal.ws.RealWebSocket: int receivedPongCount()
okio.ForwardingSource: void close()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
okhttp3.Cookie: boolean httpOnly
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.CacheControl: boolean noTransform
okhttp3.FormBody: okhttp3.MediaType CONTENT_TYPE
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
okhttp3.Cache: void update(okhttp3.Response,okhttp3.Response)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
okhttp3.Headers: Headers(java.lang.String[])
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.reflect.Method checkServerTrusted
com.facebook.react.bridge.RuntimeExecutor
okhttp3.internal.http2.Http2Connection$3: Http2Connection$3(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[])
com.facebook.react.bridge.ReactCallback
okhttp3.EventListener$2: okhttp3.EventListener val$listener
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealConnection connection
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.facebook.jni.HybridData$Destructor
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: okhttp3.internal.huc.OkHttpURLConnection this$0
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.react.bridge.JavaJSExecutor: void close()
okhttp3.internal.JavaNetHeaders$1: int compare(java.lang.Object,java.lang.Object)
okhttp3.TlsVersion
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.facebook.react.views.picker.ReactPickerManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
com.horcrux.svg.EllipseView: void setCy(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.core.RCTNativeAppEventEmitter
okhttp3.Dispatcher: void cancelAll()
okhttp3.OkHttpClient: java.net.Proxy proxy()
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
okio.AsyncTimeout: void scheduleTimeout(okio.AsyncTimeout,long,boolean)
okhttp3.internal.http2.PushObserver$1
okhttp3.internal.io.FileSystem$1: okio.Source source(java.io.File)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.http1.Http1Codec$ChunkedSink
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
okhttp3.Cache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
okhttp3.internal.http2.Hpack$Writer: int SETTINGS_HEADER_TABLE_SIZE
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
okhttp3.internal.http2.Http2Stream: int id
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.horcrux.svg.UseView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.jni.HybridData: HybridData()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.uimanager.ViewGroupManager
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setOpacity(android.view.View,float)
okhttp3.internal.http1.Http1Codec$ChunkedSource
com.facebook.react.bridge.BaseJavaModule: void initialize()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.RequestBody$1: long contentLength()
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
okhttp3.Cache$Entry: okhttp3.Handshake handshake
okhttp3.Cache$Entry: long receivedResponseMillis
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
okhttp3.MultipartBody$Part
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
okhttp3.internal.huc.OkHttpURLConnection: int getReadTimeout()
okhttp3.internal.http2.Http2Reader$Handler: void pushPromise(int,int,java.util.List)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.CertificatePinner: okio.ByteString sha256(java.security.cert.X509Certificate)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
okhttp3.ConnectionPool: ConnectionPool()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
okio.AsyncTimeout: void timedOut()
okhttp3.CertificatePinner$Pin: CertificatePinner$Pin(java.lang.String,java.lang.String)
okhttp3.Response$Builder
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
com.facebook.react.bridge.DynamicFromObject: double asDouble()
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
okhttp3.internal.http.HttpDate$1: java.lang.Object initialValue()
okhttp3.internal.huc.OkHttpURLConnection: void connect()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.RootViewManager
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTINUATION
okhttp3.Challenge: java.nio.charset.Charset charset()
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long)
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] values()
com.facebook.react.views.picker.ReactDropdownPickerManager
okhttp3.internal.http2.PushObserver$1: PushObserver$1()
okhttp3.internal.http2.Http2Connection$6: okio.Buffer val$buffer
okhttp3.internal.http2.Http2Connection$PingRunnable: void execute()
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
okhttp3.Route: java.net.Proxy proxy
okhttp3.MediaType: java.lang.String TOKEN
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
com.facebook.jni.CppException: CppException(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException: okhttp3.Interceptor INTERCEPTOR
okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)
com.horcrux.svg.EllipseView: void setRx(com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.FaultHidingSink: void onException(java.io.IOException)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
okhttp3.internal.http2.Http2Codec: okhttp3.Interceptor$Chain chain
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Call buildCall()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.horcrux.svg.RadialGradientView: void setRx(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.HttpUrl: boolean isHttps()
okhttp3.internal.http2.Http2Connection: void writeSynReset(int,okhttp3.internal.http2.ErrorCode)
okhttp3.MultipartBody: byte[] COLONSPACE
okhttp3.HttpUrl: boolean percentEncoded(java.lang.String,int,int)
okhttp3.internal.ws.RealWebSocket: java.util.concurrent.ScheduledFuture cancelFuture
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: boolean equals(java.lang.Object)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.facebook.react.bridge.CatalystInstance: void destroy()
okhttp3.ConnectionPool: long keepAliveDurationNs
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.RenderableViewManager$SVGClass,com.horcrux.svg.RenderableViewManager$1)
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: boolean mShuttingDown
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderFieldKey(int)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Settings: int get(int)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
okhttp3.Protocol: java.lang.String protocol
com.horcrux.svg.SvgView: android.graphics.Rect getCanvasBounds()
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.OkHttpClient: boolean followSslRedirects()
okhttp3.FormBody: java.lang.String encodedValue(int)
okhttp3.internal.http2.PushObserver$1: boolean onData(int,okio.BufferedSource,int,boolean)
okhttp3.OkHttpClient: int pingIntervalMillis()
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getConstants()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler getExceptionHandler()
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
okhttp3.CacheControl: int maxAgeSeconds
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.facebook.react.bridge.Arguments: Arguments()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.horcrux.svg.SvgViewModule: void access$000(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
okhttp3.internal.http2.Http2: byte TYPE_PUSH_PROMISE
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getAllowUserInteraction()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
okhttp3.MultipartBody: byte[] DASHDASH
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getResponseMessage()
com.facebook.react.bridge.JavaMethodWrapper$9
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
com.facebook.react.devsupport.JSDevSupport: com.facebook.react.devsupport.JSDevSupport$DevSupportCallback mCurrentCallback
okhttp3.internal.platform.OptionalMethod: java.lang.Class returnType
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.facebook.react.fabric.FabricUIManager
okhttp3.Request: okhttp3.Headers headers
com.facebook.proguard.annotations.DoNotStrip
okhttp3.internal.Util: Util()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.jni.HybridData
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAlertManagerSpec
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Response: okhttp3.Handshake handshake
okhttp3.Dispatcher: java.util.List runningCalls()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ERROR_NO_ACTIVITY
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response networkResponse
okhttp3.internal.Util: java.nio.charset.Charset ISO_8859_1
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String dn
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isCanceled()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.InvalidIteratorException
okhttp3.internal.http2.Http2Codec: java.util.List http2HeadersList(okhttp3.Request)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.ClipPathView
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
okhttp3.internal.http1.Http1Codec: int STATE_WRITING_REQUEST_BODY
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
okhttp3.HttpUrl: java.lang.String encodedPassword()
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
okhttp3.FormBody: java.util.List encodedValues
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
okhttp3.internal.cache.CacheInterceptor$1: void close()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
okhttp3.internal.http1.Http1Codec$FixedLengthSource: Http1Codec$FixedLengthSource(okhttp3.internal.http1.Http1Codec,long)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http.HttpHeaders: java.lang.String readToken(okio.Buffer)
okhttp3.Response: okhttp3.ResponseBody body
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptCanOpenWindowsAutomatically(android.webkit.WebView,boolean)
okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader
com.reactnativecommunity.webview.RNCWebViewManager: void setDomStorageEnabled(android.webkit.WebView,boolean)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
okhttp3.internal.huc.OutputStreamRequestBody$1: okio.BufferedSink val$sink
okhttp3.internal.http.HttpDate: long MAX_DATE
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
okhttp3.internal.Util: void addSuppressedIfPossible(java.lang.Throwable,java.lang.Throwable)
com.horcrux.svg.ImageView
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
okhttp3.Address: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.facebook.react.bridge.ReactContext$2
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
okhttp3.internal.cache.DiskLruCache: java.lang.String VERSION_1
okhttp3.internal.huc.OkHttpsURLConnection: void setAllowUserInteraction(boolean)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void setListBytes(byte[],byte[])
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getParentTextRoot()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
okhttp3.Cache: java.io.File directory()
com.facebook.react.modules.core.JSTimers
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactRootView: int getRootViewTag()
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.http2.Http2Connection: boolean access$300(okhttp3.internal.http2.Http2Connection)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.facebook.react.bridge.ReactMarkerConstants
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
okhttp3.internal.tls.CertificateChainCleaner
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.HttpUrl: java.util.List encodedPathSegments()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
okio.Timeout: boolean hasDeadline()
okhttp3.OkHttpClient$1: void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.facebook.react.bridge.ReactContext: void destroy()
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.horcrux.svg.SvgView: void setId(int)
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1
com.facebook.react.views.slider.ReactSliderManager: void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String)
okhttp3.RealCall$1
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
okhttp3.Handshake: java.security.Principal peerPrincipal()
com.facebook.react.bridge.JavaScriptModuleRegistry
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
com.facebook.fbreact.specs.NativeShareModuleSpec
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.PatternView: void setPatternUnits(int)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.webkit.WebView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
okhttp3.Dispatcher: Dispatcher()
com.horcrux.svg.PatternView: void setY(com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: java.lang.Object callStackTrace
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.modules.core.DeviceEventManagerModule
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String TAG
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: DefaultNativeModuleCallExceptionHandler()
okhttp3.OkHttpClient: java.util.List networkInterceptors
okhttp3.internal.http2.Http2Stream: boolean isOpen()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.Object getContent()
com.facebook.react.uimanager.ViewManager: android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
okhttp3.ResponseBody$BomAwareReader: void close()
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
com.facebook.react.bridge.Systrace
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okhttp3.internal.JavaNetHeaders
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.uimanager.events.ReactEventEmitter
okhttp3.HttpUrl: java.lang.String fragment()
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
okhttp3.internal.cache2.Relay: okio.Buffer buffer
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingEnabled(android.webkit.WebView,boolean)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
okhttp3.internal.Util: java.nio.charset.Charset UTF_32_BE
okhttp3.internal.http2.Settings: int MAX_HEADER_LIST_SIZE
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)
okhttp3.CacheControl: java.lang.String headerValue
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setMessagingModuleName(java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http2.Http2Connection: boolean pushedStream(int)
com.facebook.react.modules.storage.AsyncStorageModule: void onCatalystInstanceDestroy()
okhttp3.internal.http1.Http1Codec$AbstractSource: okio.Timeout timeout()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String getName()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.horcrux.svg.MaskView
com.horcrux.svg.RenderableViewManager$ImageViewManager: RenderableViewManager$ImageViewManager()
okhttp3.internal.huc.OkHttpURLConnection: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_HISTORY
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
okhttp3.internal.platform.Platform: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.RequestBody$2: okhttp3.MediaType contentType()
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier mReactDatabaseSupplier
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
okhttp3.CacheControl: int minFreshSeconds()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.facebook.react.fabric.Binding: Binding()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String mUserAgentWithApplicationName
com.facebook.fbreact.specs.NativeSoundManagerSpec
okhttp3.internal.Util: okio.ByteString UTF_32_LE_BOM
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
okhttp3.Cache: int hitCount
okhttp3.Cookie$Builder: java.lang.String path
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderField(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getHeaderFieldDate(java.lang.String,long)
okhttp3.internal.huc.OkHttpURLConnection: java.io.InputStream getInputStream()
okhttp3.Call$Factory
okhttp3.ResponseBody$1: okio.BufferedSource val$content
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setOpacity(android.view.View,float)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
okhttp3.OkHttpClient: java.util.List interceptors
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
androidx.appcompat.widget.SearchView: int getPreferredWidth()
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
okhttp3.Dispatcher
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Connection: void pushHeadersLater(int,java.util.List,boolean)
okhttp3.internal.http2.Header: java.lang.String TARGET_AUTHORITY_UTF8
okhttp3.EventListener: okhttp3.EventListener NONE
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.internal.http.HttpDate: HttpDate()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
com.horcrux.svg.RenderableViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
okhttp3.internal.ws.WebSocketWriter$FrameSink: okio.Timeout timeout()
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
com.horcrux.svg.RadialGradientView: void setRy(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.facebook.react.ReactActivity: ReactActivity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.modules.camera.ImageStoreManager
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.picker.ReactPicker)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
okhttp3.internal.http2.Http2: byte FLAG_PADDED
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextLength(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
com.horcrux.svg.RenderableViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.horcrux.svg.RenderableViewManager: void setStrokeOpacity(com.horcrux.svg.RenderableView,float)
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableArray copyWritableArray(com.facebook.react.bridge.WritableArray)
okhttp3.Cookie: boolean secure()
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File outputImage
okhttp3.internal.http2.Header$Listener
okhttp3.internal.cache2.Relay: boolean isClosed()
com.facebook.react.bridge.DynamicFromMap: int asInt()
okhttp3.JavaNetCookieJar: java.util.List decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.ws.RealWebSocket$1: RealWebSocket$1(okhttp3.internal.ws.RealWebSocket)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.sudokunative.MainApplication: MainApplication()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
okhttp3.internal.cache.DiskLruCache: long maxSize
okhttp3.internal.huc.BufferedRequestBody: okhttp3.Request prepareToSendRequest(okhttp3.Request)
okhttp3.Response$Builder: long sentRequestAtMillis
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths(java.lang.String[])
okio.ForwardingSource: java.lang.String toString()
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.horcrux.svg.TextPathView
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RadialGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
okhttp3.Response: okhttp3.Headers headers()
com.horcrux.svg.RenderableViewManager$SVGClass: com.horcrux.svg.RenderableViewManager$SVGClass[] values()
okhttp3.internal.http1.Http1Codec$ChunkedSource: okhttp3.HttpUrl url
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView getSvgViewByTag(int)
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getFileChooserIntent(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean noAcceptTypesSet(java.lang.String[])
com.facebook.react.bridge.ReactModuleWithSpec
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
okhttp3.CacheControl$Builder: CacheControl$Builder()
okhttp3.EventListener: okhttp3.EventListener$Factory factory(okhttp3.EventListener)
com.facebook.react.modules.vibration.VibrationModule
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.facebook.react.bridge.ReactSoftException
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
okhttp3.internal.http2.Header: okio.ByteString name
com.facebook.yoga.YogaNative: YogaNative()
okhttp3.internal.connection.RealConnection: java.net.Socket socket
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView getSvgView()
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
okhttp3.internal.http2.Http2: byte TYPE_RST_STREAM
okhttp3.OkUrlFactory: okhttp3.OkHttpClient client()
androidx.appcompat.view.menu.ListMenuItemView
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.Authenticator
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.facebook.react.bridge.Dynamic: int asInt()
okhttp3.CacheControl: int sMaxAgeSeconds
com.facebook.react.bridge.Arguments$1: int size()
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.internal.http1.Http1Codec: void writeRequestHeaders(okhttp3.Request)
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String SELECTED_PROTOCOL
okhttp3.internal.huc.OkHttpURLConnection: java.security.Permission getPermission()
com.facebook.react.views.textinput.ReactEditText
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RealConnection: boolean noNewStreams
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
okhttp3.internal.cache.FaultHidingSink: void close()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
okhttp3.internal.platform.OptionalMethod: java.lang.Class[] methodParams
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String REJECTION_CODE
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
okhttp3.internal.cache.DiskLruCache: long size()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: long read(okio.Buffer,long)
okhttp3.internal.http2.Http2: byte FLAG_PRIORITY
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation)
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method openMethod
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.facebook.react.views.picker.ReactDialogPickerManager
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
okhttp3.internal.huc.OkHttpsURLConnection: okhttp3.internal.huc.OkHttpURLConnection delegate
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String BLANK_URL
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
com.facebook.react.modules.intent.IntentModule
okhttp3.internal.http2.Http2Writer: void synReply(boolean,int,java.util.List)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
okhttp3.internal.http2.Settings: int DEFAULT_INITIAL_WINDOW_SIZE
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.ResponseBody$1: long contentLength()
com.facebook.fbreact.specs.NativeAppStateSpec
okhttp3.internal.http2.Hpack: Hpack()
com.facebook.jni.HybridData: void resetNative()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(com.horcrux.svg.PatternView,float)
okhttp3.CertificatePinner: int hashCode()
com.horcrux.svg.VirtualView: android.graphics.RectF getClientRect()
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.horcrux.svg.ImageView: void setX(com.facebook.react.bridge.Dynamic)
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
okhttp3.internal.connection.StreamAllocation: okhttp3.EventListener eventListener
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_GO_BACK
com.horcrux.svg.RenderableViewManager$UseViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
okhttp3.internal.http2.Http2: byte FLAG_COMPRESSED
com.facebook.react.views.picker.ReactDropdownPickerManager: void setPrompt(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendantsJNI(long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.sudokunative.MainApplication
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
okhttp3.internal.connection.StreamAllocation: okhttp3.Address address
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
okhttp3.internal.http2.Http2Codec: java.lang.String PROXY_CONNECTION
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
okhttp3.internal.Internal: int code(okhttp3.Response$Builder)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.horcrux.svg.RenderableViewManager$DefsViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.Callback
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
okhttp3.internal.http.HttpCodec: void flushRequest()
com.facebook.react.views.picker.ReactDropdownPickerManager: java.lang.String getName()
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.facebook.react.modules.blob.FileReaderModule: java.lang.String getName()
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVerticalAlign(com.horcrux.svg.TextView,java.lang.String)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
okhttp3.internal.http2.Http2Connection$1: void execute()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$SymbolManager: RenderableViewManager$SymbolManager()
com.reactnativecommunity.webview.RNCWebViewModule: android.webkit.ValueCallback filePathCallback
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
okhttp3.Cache: int ENTRY_COUNT
okhttp3.RequestBody$2: long contentLength()
okhttp3.RequestBody$3: okhttp3.MediaType val$contentType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptBeforeContentLoaded(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
okhttp3.internal.huc.BufferedRequestBody
okhttp3.internal.http1.Http1Codec$ChunkedSink: void flush()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getConstants()
com.facebook.react.modules.image.ImageLoaderModule
okhttp3.internal.http1.Http1Codec$ChunkedSink: void close()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(com.horcrux.svg.TSpanView,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
okhttp3.internal.http1.Http1Codec$ChunkedSource: long NO_CHUNK_YET
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: int hashCode()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
okhttp3.internal.huc.OkHttpsURLConnection: long getIfModifiedSince()
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(com.facebook.react.views.picker.ReactPicker)
okhttp3.internal.http2.Settings: int HEADER_TABLE_SIZE
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
okhttp3.ResponseBody: void close()
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.internal.huc.OkHttpsURLConnection: void setReadTimeout(int)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
com.facebook.react.fabric.Binding: void setPixelDensity(float)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
androidx.appcompat.widget.SearchView
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.horcrux.svg.RenderableViewManager$RectViewManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.facebook.react.bridge.ReactIgnorableMountingException
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] cleanFiles
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
okhttp3.internal.connection.RealConnection$1: okhttp3.internal.connection.RealConnection this$0
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.react.bridge.ReactSoftException: void removeListener(com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener)
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager(com.reactnativecommunity.webview.WebViewConfig)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
androidx.appcompat.widget.SwitchCompat
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.http1.Http1Codec$AbstractSource: void close()
com.facebook.react.views.slider.ReactSliderManager: int STYLE
okhttp3.internal.tls.DistinguishedNameParser: char getEscaped()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.RealCall: okhttp3.internal.connection.StreamAllocation streamAllocation()
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.internal.cache.InternalCache)
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
okhttp3.Cookie$Builder: boolean httpOnly
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.NativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
okhttp3.internal.http1.Http1Codec$AbstractSource: long bytesRead
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
okhttp3.Dispatcher: int queuedCallsCount()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.bridge.ReadableNativeMap$1
okhttp3.Request$Builder
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: void endOfInput(java.io.IOException)
okhttp3.Call: okhttp3.Response execute()
okhttp3.internal.Util: java.nio.charset.Charset UTF_8
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
okhttp3.Challenge: java.lang.String scheme()
com.facebook.react.views.picker.ReactPickerManager
okhttp3.Cache: java.util.Iterator urls()
com.facebook.react.bridge.Dynamic
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
okhttp3.Address
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.ws.WebSocketReader$FrameCallback
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
okhttp3.Headers: void checkValue(java.lang.String,java.lang.String)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: Http1Codec$FixedLengthSink(okhttp3.internal.http1.Http1Codec,long)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableViewManager$MatrixDecompositionContext sMatrixDecompositionContext
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getContentLengthLong()
okhttp3.Response: okhttp3.Request request()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
okhttp3.MediaType: java.lang.String type()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
okhttp3.internal.huc.OkHttpsURLConnection: void setInstanceFollowRedirects(boolean)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.facebook.react.bridge.CatalystInstanceImpl: boolean mNativeModulesThreadDestructionComplete
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateStateMountItem(int,java.lang.Object)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.facebook.soloader.DoNotOptimize
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
okhttp3.Response: long sentRequestAtMillis
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl$Builder: java.lang.String host
okhttp3.internal.http2.Http2Connection$1
okhttp3.MediaType: java.lang.String subtype()
com.horcrux.svg.SvgView: void setVbWidth(float)
okhttp3.Request: okhttp3.CacheControl cacheControl
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
okhttp3.Response: java.lang.String message()
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String getName()
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule
okhttp3.Address: java.util.List protocols()
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
okhttp3.internal.http2.Http2: byte FLAG_END_HEADERS
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)
com.reactnativecommunity.webview.RNCWebViewModule: android.net.Uri[] getSelectedFiles(android.content.Intent,int)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.huc.OutputStreamRequestBody: long expectedContentLength
okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)
com.horcrux.svg.MaskView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
okhttp3.internal.http2.Http2: java.io.IOException ioException(java.lang.String,java.lang.Object[])
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
okhttp3.internal.huc.OutputStreamRequestBody
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
okhttp3.Cache: int requestCount()
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.internal.ws.RealWebSocket$Streams
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
okhttp3.internal.http2.Header: int hpackSize
com.horcrux.svg.RenderableViewManager$PatternManager: RenderableViewManager$PatternManager()
okhttp3.OkHttpClient: java.util.List protocols
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
okhttp3.internal.http2.Http2Connection: int maxConcurrentStreams()
androidx.appcompat.widget.AppCompatImageView
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
okhttp3.MultipartBody: java.util.List parts
okhttp3.RealCall: java.lang.Object clone()
okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException)
okhttp3.HttpUrl$Builder: java.lang.String toString()
com.reactnativecommunity.webview.RNCWebViewModule: int PICKER_LEGACY
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.facebook.react.views.textinput.ReactTextInputShadowNode
okhttp3.internal.http.CallServerInterceptor$CountingSink
okhttp3.internal.ws.RealWebSocket$2: void onResponse(okhttp3.Call,okhttp3.Response)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
okio.AsyncTimeout: okio.AsyncTimeout next
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
okhttp3.internal.cache.DiskLruCache$1
okhttp3.internal.huc.OkHttpURLConnection
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setHostname
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.facebook.fbreact.specs.NativeClipboardSpec
androidx.appcompat.widget.ActionMenuView
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
okhttp3.internal.platform.Platform: java.util.List alpnProtocolNames(java.util.List)
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.facebook.jni.HybridClassBase
okhttp3.Response: okhttp3.Request request
okhttp3.HttpUrl: int hashCode()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
okhttp3.internal.http2.Http2Reader$ContinuationSource: short padding
okhttp3.Cookie: int hashCode()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
okhttp3.internal.http.HttpHeaders: int skipUntil(java.lang.String,int,java.lang.String)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
okhttp3.FormBody: java.util.List encodedNames
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: Http2Connection$ReaderRunnable$2(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],boolean,okhttp3.internal.http2.Settings)
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
okhttp3.Headers: boolean equals(java.lang.Object)
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptForMainFrameOnly(boolean)
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.Inspector$Page: int mId
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
okhttp3.internal.Util$1: int compare(java.lang.String,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptEnabled(android.webkit.WebView,boolean)
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
okhttp3.internal.connection.RealConnection: long idleAtNanos
com.sudokunative.MainActivity: MainActivity()
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
okio.Timeout: long minTimeout(long,long)
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
okhttp3.CookieJar
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextPathView,java.lang.String)
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.horcrux.svg.ImageView: void setAlign(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()
okhttp3.CookieJar$1: java.util.List loadForRequest(okhttp3.HttpUrl)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.horcrux.svg.RenderableViewManager$GroupViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.ws.RealWebSocket: int sentPingCount()
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.Cache$CacheRequestImpl: boolean done
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method getMethod
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
com.facebook.react.views.picker.ReactPickerManager: void setItems(com.facebook.react.views.picker.ReactPicker,com.facebook.react.bridge.ReadableArray)
okhttp3.EventListener$Factory
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
okhttp3.FormBody$Builder: okhttp3.FormBody build()
okhttp3.internal.platform.Android10Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
okhttp3.internal.ws.RealWebSocket: okhttp3.Request originalRequest
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.facebook.fbreact.specs.NativeLogBoxSpec
okhttp3.Response: java.lang.String toString()
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.EllipseView: void setRy(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(com.horcrux.svg.SymbolView,float)
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
okhttp3.Route: okhttp3.Address address()
com.facebook.react.modules.permissions.PermissionsModule
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findAndroidPlatform()
okhttp3.EventListener: EventListener()
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)
com.facebook.react.ReactRootView
okhttp3.internal.huc.OkHttpsURLConnection: boolean getAllowUserInteraction()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.NativeModule$NativeMethod
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.facebook.react.bridge.JSBundleLoader$4
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
com.facebook.react.modules.storage.AsyncStorageModule
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.facebook.fbreact.specs.NativeVibrationSpec
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: void execute()
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
okhttp3.CacheControl: boolean isPublic
okhttp3.internal.huc.BufferedRequestBody: okio.Buffer buffer
okhttp3.Request: okhttp3.HttpUrl url
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
com.facebook.soloader.Api18TraceUtils
com.facebook.react.views.picker.ReactDialogPickerManager: ReactDialogPickerManager()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
okhttp3.Headers: java.lang.String value(int)
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsVideo(java.lang.String[])
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
com.facebook.react.modules.datepicker.DatePickerDialogModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.cache.CacheInterceptor$1: boolean cacheRequestClosed
okhttp3.OkHttpClient: int callTimeout
okhttp3.internal.http2.Http2Codec: void finishRequest()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog access$202(com.facebook.react.devsupport.LogBoxModule,com.facebook.react.devsupport.LogBoxDialog)
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
okhttp3.Authenticator: okhttp3.Authenticator NONE
okhttp3.internal.ws.RealWebSocket$Message
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
okhttp3.internal.io.FileSystem$1: long size(java.io.File)
okhttp3.internal.ws.RealWebSocket$2: void onFailure(okhttp3.Call,java.io.IOException)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
okio.Timeout: long timeoutNanos()
okhttp3.OkHttpClient$Builder: java.util.List interceptors
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_REENCODE_SET
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Connection: void sendDegradedPingLater()
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File getCapturedFile(com.reactnativecommunity.webview.RNCWebViewModule$MimeType)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
okhttp3.internal.connection.RealConnection: java.util.List allocations
com.facebook.react.modules.storage.AsyncStorageModule: void clearSensitiveData()
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.ConnectionPool,okhttp3.Route)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewModule: boolean needsCameraPermission()
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.RealCall$AsyncCall: okhttp3.RealCall get()
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.Cache: int networkCount
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
okhttp3.internal.cache.FaultHidingSink: void flush()
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http2.Http2Codec: void cancel()
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void execute()
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
okhttp3.HttpUrl: java.lang.String encodedPath()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
androidx.appcompat.widget.ButtonBarLayout
com.facebook.react.animated.EventAnimationDriver
okhttp3.internal.huc.OkHttpURLConnection: void setIfModifiedSince(long)
okhttp3.Cookie
okhttp3.internal.http2.Http2Reader$Handler: void ping(boolean,int,int)
com.facebook.react.modules.i18nmanager.I18nManagerModule
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
okhttp3.internal.http2.Http2Codec: java.lang.String HOST
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableView: void setStrokeDashoffset(float)
okhttp3.internal.http1.Http1Codec: int HEADER_LIMIT
okhttp3.internal.cache.DiskLruCache: boolean initialized
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
okhttp3.internal.http2.Http2Reader
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.HttpUrl: java.lang.String scheme
okhttp3.internal.http2.Hpack: int PREFIX_7_BITS
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
okhttp3.HttpUrl: java.lang.String PASSWORD_ENCODE_SET
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
androidx.drawerlayout.widget.DrawerLayout
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
okhttp3.ResponseBody$1
com.reactnativecommunity.webview.RNCWebViewManager: void setOverScrollMode(android.webkit.WebView,java.lang.String)
okhttp3.internal.connection.StreamAllocation: okhttp3.Call call
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getName()
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.internal.http2.Http2Connection$Builder: boolean client
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onSuccess(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
okhttp3.internal.io.FileSystem$1: void rename(java.io.File,java.io.File)
okhttp3.Response: long receivedResponseAtMillis()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
okhttp3.Dispatcher: int maxRequests
com.facebook.react.modules.share.ShareModule
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
okhttp3.internal.huc.OutputStreamRequestBody: okio.Timeout timeout()
okhttp3.internal.huc.OutputStreamRequestBody: okio.Timeout timeout
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
okhttp3.HttpUrl: java.lang.String host()
com.reactnativecommunity.webview.RNCWebViewManager: void setThirdPartyCookiesEnabled(android.webkit.WebView,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
okhttp3.internal.Util: int indexOf(java.util.Comparator,java.lang.String[],java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
okhttp3.HttpUrl: java.lang.String encodedFragment()
androidx.appcompat.widget.AppCompatCheckedTextView
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createMountItem(java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,int,int,boolean)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
okhttp3.internal.http1.Http1Codec$AbstractSource: void endOfInput(boolean,java.io.IOException)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okio.AsyncTimeout: okio.AsyncTimeout awaitTimeout()
okhttp3.internal.cache.DiskLruCache$2: boolean $assertionsDisabled
okhttp3.internal.http1.Http1Codec
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
okhttp3.Call
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
okhttp3.RequestBody$2
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeSourceCodeSpec
okhttp3.internal.http.HttpDate$1: java.text.DateFormat initialValue()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
okhttp3.Cache$CacheRequestImpl$1: void close()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
okhttp3.ResponseBody$BomAwareReader: okio.BufferedSource source
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
okhttp3.internal.http2.Http2Stream: java.util.Deque headersQueue
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.CacheControl$Builder: int maxStaleSeconds
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
okhttp3.internal.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.http.StatusLine: int code
com.facebook.react.devsupport.LogBoxModule: android.view.View mReactRootView
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
okhttp3.Cookie: java.lang.String parseDomain(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.huc.OutputStreamRequestBody: boolean isClosed()
androidx.versionedparcelable.ParcelImpl
com.facebook.fbreact.specs.NativeRedBoxSpec
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
okhttp3.MultipartBody$Part: okhttp3.Headers headers
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
okhttp3.CacheControl: int maxStaleSeconds()
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.appcompat.app.AppCompatActivity
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
okhttp3.internal.platform.Android10Platform
com.horcrux.svg.TextView: void setPositionX(com.facebook.react.bridge.Dynamic)
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSink: long EMIT_BUFFER_SIZE
com.facebook.react.bridge.CatalystInstanceImpl$5
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(android.content.Context)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
okhttp3.Authenticator$1: Authenticator$1()
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.ws.RealWebSocket: java.lang.String key
okhttp3.CipherSuite$1: CipherSuite$1()
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
com.facebook.react.views.modal.ReactModalHostManager
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderField(int)
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
okhttp3.OkHttpClient$1: OkHttpClient$1()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Principal getPeerPrincipal()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(com.horcrux.svg.PathView,java.lang.String)
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_LONG
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: Http1Codec$UnknownLengthSource(okhttp3.internal.http1.Http1Codec)
okhttp3.internal.http2.Http2Stream
okhttp3.internal.Internal: okhttp3.internal.Internal instance
okhttp3.internal.JavaNetHeaders: java.util.Comparator FIELD_NAME_COMPARATOR
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
androidx.appcompat.widget.DialogTitle: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
okhttp3.internal.http2.Http2Stream$StreamTimeout
okhttp3.MultipartBody$Builder: okio.ByteString boundary
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(boolean)
okhttp3.Cache$1: okhttp3.Response get(okhttp3.Request)
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
com.facebook.react.fabric.Binding: void stopSurface(int)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
okhttp3.Cache$Entry: java.lang.String requestMethod
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.facebook.react.views.picker.ReactPicker: void setStagedPrimaryTextColor(java.lang.Integer)
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
okhttp3.OkHttpClient: int writeTimeout
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getRequestMethod()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers getHeaders()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
okhttp3.Cache$Entry: long sentRequestMillis
okhttp3.internal.http.UnrepeatableRequestBody
com.facebook.react.bridge.JSIModuleProvider
okhttp3.internal.ws.WebSocketProtocol: int B1_FLAG_MASK
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: Http2Connection$ReaderRunnable$3(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[])
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
com.facebook.react.bridge.AssertionException
okhttp3.Route: boolean equals(java.lang.Object)
okhttp3.MultipartBody: byte[] CRLF
okhttp3.internal.huc.OkHttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
com.horcrux.svg.MaskView: void setMaskTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Dynamic: double asDouble()
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
okhttp3.internal.Util: boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[])
okhttp3.ConnectionPool: java.util.Deque connections
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
okhttp3.RequestBody$1: RequestBody$1(okhttp3.MediaType,okio.ByteString)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.util.Map getRequestProperties()
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.datepicker.DatePickerDialogModule
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
okhttp3.internal.connection.StreamAllocation: java.lang.Object callStackTrace
okhttp3.MediaType: java.nio.charset.Charset charset()
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
okhttp3.Cache$2: void remove()
com.horcrux.svg.RenderableView: void setFillOpacity(float)
com.facebook.react.bridge.DynamicFromObject: void recycle()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpStream()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl)
okhttp3.internal.cache.DiskLruCache$Editor$1: okhttp3.internal.cache.DiskLruCache$Editor this$1
okhttp3.internal.cache2.Relay: boolean complete
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.io.FileSystem$1: void delete(java.io.File)
okhttp3.internal.Util: java.nio.charset.Charset UTF_16_LE
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response getResponse(boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.internal.http2.Http2Connection$7: Http2Connection$7(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.Util: java.lang.String inet6AddressToAscii(byte[])
okhttp3.Request: okhttp3.CacheControl cacheControl()
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void connect()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle valueOf(java.lang.String)
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
okhttp3.internal.connection.StreamAllocation: void noNewStreams()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
okio.Timeout: long timeoutNanos
okhttp3.internal.Util: java.nio.charset.Charset UTF_32_LE
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.internal.ws.WebSocketWriter$FrameSink: void flush()
okhttp3.Cookie$Builder: boolean persistent
okhttp3.CertificatePinner$Builder
com.facebook.react.bridge.JSBundleLoader$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
com.facebook.react.bridge.JavaOnlyArray$1
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
okhttp3.Cookie: long expiresAt
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem removeDeleteMultiMountItem(int[])
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.horcrux.svg.RenderableViewManager$PatternManager
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Connection: void access$000(okhttp3.internal.http2.Http2Connection)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.horcrux.svg.RenderableViewManager$MaskManager
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.Route
okhttp3.internal.huc.OkHttpsURLConnection: boolean getInstanceFollowRedirects()
okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
okhttp3.internal.http1.Http1Codec: long headerLimit
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
okhttp3.FormBody: void writeTo(okio.BufferedSink)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
okhttp3.HttpUrl$Builder: int parsePort(java.lang.String,int,int)
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.facebook.react.devsupport.HMRClient: void enable()
com.facebook.react.views.picker.ReactDialogPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WritableArray
okhttp3.internal.huc.OkHttpsURLConnection: java.io.InputStream getErrorStream()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
okhttp3.internal.cache.CacheInterceptor$1: okio.BufferedSink val$cacheBody
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse(okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: java.io.InputStream getInputStream()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
okhttp3.Cookie: java.lang.String value()
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
okhttp3.internal.huc.OkHttpURLConnection: void setInstanceFollowRedirects(boolean)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
okhttp3.internal.tls.OkHostnameVerifier
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.Dynamic)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
okhttp3.internal.platform.Jdk9Platform: java.lang.reflect.Method getProtocolMethod
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteSelector$Selection routeSelection
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputManager
okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)
okhttp3.Protocol
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: HttpUrl(okhttp3.HttpUrl$Builder)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
okhttp3.internal.http.RequestLine: RequestLine()
okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
okhttp3.internal.connection.RouteSelector
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
okhttp3.internal.http2.Http2Connection$ReaderRunnable
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
okhttp3.Response: Response(okhttp3.Response$Builder)
okhttp3.internal.cache.CacheInterceptor$1: okhttp3.internal.cache.CacheInterceptor this$0
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDoOutput()
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_TEXT
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,short,byte,int)
okhttp3.internal.huc.OkHttpURLConnection: java.util.Map getRequestProperties()
com.facebook.react.uimanager.events.ReactEventEmitter: android.util.SparseArray mEventEmitters
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.horcrux.svg.SvgViewManager: void setVbHeight(com.horcrux.svg.SvgView,float)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits valueOf(java.lang.String)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
okhttp3.CipherSuite: java.util.Map INSTANCES
okhttp3.internal.ws.RealWebSocket$CancelRunnable
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
okhttp3.Connection: java.net.Socket socket()
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
okhttp3.HttpUrl: java.lang.String fragment
okhttp3.internal.huc.OkHttpURLConnection: void setFixedLengthStreamingMode(int)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Response)
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
okhttp3.Cookie: java.lang.String path
com.horcrux.svg.RenderableViewManager: void setOnLayout(com.horcrux.svg.VirtualView,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
okhttp3.CookieJar$1
com.facebook.yoga.YogaNodeJNIFinalizer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
okhttp3.HttpUrl: java.lang.String username
okhttp3.Request$Builder: okhttp3.Request build()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.OkHttpClient client
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.facebook.react.bridge.UnexpectedNativeTypeException
com.facebook.react.bridge.JSIModuleHolder
com.facebook.react.bridge.UIManager
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String binarySearchBytes(byte[],byte[][],int)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV2
okhttp3.internal.huc.OkHttpURLConnection: boolean executed
com.horcrux.svg.RadialGradientView
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
okhttp3.internal.http2.Http2Connection: int INTERVAL_PING
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
okhttp3.OkHttpClient$Builder: void setInternalCache(okhttp3.internal.cache.InternalCache)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
okhttp3.Response
okhttp3.internal.tls.DistinguishedNameParser: int length
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
okhttp3.Cache: int readInt(okio.BufferedSource)
com.facebook.react.bridge.ReadableMapKeySetIterator
okhttp3.internal.huc.OutputStreamRequestBody$1: void close()
com.horcrux.svg.LinearGradientView: void setGradientUnits(int)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(com.horcrux.svg.SymbolView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateLayoutMountItem(int,int,int,int,int,int)
com.horcrux.svg.RenderableViewManager$RenderableShadowNode
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
okhttp3.internal.http2.Http2Connection: java.lang.String hostname
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
okhttp3.OkHttpClient$1: okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request)
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
okhttp3.OkUrlFactory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
okhttp3.RealCall: okhttp3.Call clone()
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScript(java.lang.String)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.JavaNetCookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
okhttp3.HttpUrl: java.lang.String redact()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
okhttp3.OkUrlFactory$1: OkUrlFactory$1(okhttp3.OkUrlFactory,java.lang.String)
okhttp3.internal.connection.StreamAllocation: boolean $assertionsDisabled
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(long,boolean)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.jni.DestructorThread$1: void run()
com.facebook.react.fabric.Binding: void driveCxxAnimations()
okhttp3.ConnectionPool: void evictAll()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
okhttp3.internal.huc.OutputStreamRequestBody$1: long bytesReceived
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
okhttp3.Cache: int writeAbortCount()
okhttp3.internal.huc.OutputStreamRequestBody: OutputStreamRequestBody()
com.facebook.react.devsupport.LogBoxModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.horcrux.svg.UseView: void setHref(java.lang.String)
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.react.bridge.JsonWriterHelper
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
com.horcrux.svg.LineView: void setX2(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Connection: int OKHTTP_CLIENT_WINDOW_SIZE
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])
okio.ForwardingSink: okio.Sink delegate
okhttp3.internal.cache.CacheRequest
okhttp3.internal.http.HttpCodec: void finishRequest()
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
okhttp3.ConnectionSpec
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
okhttp3.ConnectionPool
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
okhttp3.MediaType: java.lang.String charset
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
okhttp3.internal.ws.WebSocketReader: boolean isClient
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
okhttp3.RealCall: okhttp3.EventListener access$000(okhttp3.RealCall)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableMap getWritableMap(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$CircleViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ACTION_DATE_SET
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
okhttp3.internal.Internal: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
com.facebook.fbreact.specs.NativeImageEditorSpec
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
okhttp3.Request: java.lang.String method()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
okhttp3.Protocol: java.lang.String toString()
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
okhttp3.Request: okhttp3.Request$Builder newBuilder()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
okhttp3.internal.http2.Http2Connection: long bytesLeftInWriteWindow
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
okhttp3.RequestBody$2: void writeTo(okio.BufferedSink)
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
okhttp3.internal.http2.Http2Stream$FramingSink: boolean $assertionsDisabled
com.horcrux.svg.RenderableView: void setStrokeLinejoin(int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
okhttp3.internal.huc.OkHttpsURLConnection: int getConnectTimeout()
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
okhttp3.Dispatcher: java.lang.Runnable idleCallback
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
okhttp3.internal.cache2.FileOperator
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
com.facebook.react.bridge.ReactContext: java.lang.String TAG
okhttp3.FormBody: okhttp3.MediaType contentType()
okhttp3.internal.cache2.Relay: long FILE_HEADER_SIZE
okio.ForwardingSink: void flush()
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getAll()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)
okhttp3.internal.Internal
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String NAME
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Object lock
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.core.widget.NestedScrollView
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration)
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
okhttp3.OkHttpClient$1: java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException)
okhttp3.Cache: okhttp3.Response get(okhttp3.Request)
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.util.Map getHeaderFields()
androidx.versionedparcelable.CustomVersionedParcelable
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: long bytesRead
com.reactnativecommunity.webview.RNCWebViewManager: void setGeolocationEnabled(android.webkit.WebView,java.lang.Boolean)
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
okio.Timeout: okio.Timeout deadlineNanoTime(long)
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.CipherSuite: okhttp3.CipherSuite init(java.lang.String,int)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsVideo(java.lang.String)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.modules.blob.FileReaderModule
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
okhttp3.MultipartBody: okhttp3.MediaType MIXED
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
okhttp3.CipherSuite
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
okhttp3.internal.ws.WebSocketWriter$FrameSink: WebSocketWriter$FrameSink(okhttp3.internal.ws.WebSocketWriter)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
com.facebook.react.views.scroll.ReactScrollView: int getPostAnimationScrollY()
okhttp3.internal.huc.OkHttpsURLConnection: void setFixedLengthStreamingMode(long)
okhttp3.internal.cache.InternalCache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.DiskLruCache$Editor$1
okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
androidx.core.util.Pools$SimplePool
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.horcrux.svg.RenderableViewManager$UseViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
okhttp3.Address: javax.net.SocketFactory socketFactory
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
okhttp3.internal.huc.BufferedRequestBody: long contentLength
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getPhotoIntent()
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
okhttp3.internal.http2.Http2Connection$6: boolean val$inFinished
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,int)
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()
okhttp3.FormBody$Builder: java.nio.charset.Charset charset
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
okhttp3.RequestBody$3: long contentLength()
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.facebook.jni.CppException
com.facebook.react.views.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
okhttp3.internal.http.HttpCodec: void cancel()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean $assertionsDisabled
okhttp3.Cache: int networkCount()
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_RELOAD
okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)
okhttp3.internal.huc.OutputStreamRequestBody$1: void write(byte[],int,int)
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
okhttp3.Call: boolean isCanceled()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
okhttp3.internal.http2.Http2Connection$4: void execute()
okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
okhttp3.Cache: void flush()
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.cache2.Relay$RelaySource: Relay$RelaySource(okhttp3.internal.cache2.Relay)
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.cache.DiskLruCache$1: void run()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: ReadableNativeMap$ReadableNativeMapKeySetIterator(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
okhttp3.internal.huc.OkHttpURLConnection: java.io.IOException propagate(java.lang.Throwable)
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
okhttp3.Cache$2: java.lang.String next()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.reactnativecommunity.webview.RNCWebViewManager: void setMixedContentMode(android.webkit.WebView,java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
okhttp3.MediaType: boolean equals(java.lang.Object)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
okhttp3.internal.http.HttpDate: java.lang.String format(java.util.Date)
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec
okhttp3.OkUrlFactory: void setUrlFilter(okhttp3.internal.URLFilter)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getContentEncoding()
okhttp3.internal.cache.DiskLruCache: void processJournal()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.horcrux.svg.RenderableViewManager$MaskManager: RenderableViewManager$MaskManager()
okhttp3.internal.http2.Http2Connection: void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures valueOf(java.lang.String)
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(com.horcrux.svg.PatternView,float)
okhttp3.internal.io.FileSystem$1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.bridge.WritableNativeArray
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
okhttp3.CertificatePinner
okhttp3.OkUrlFactory
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
okhttp3.RealCall: okhttp3.Request originalRequest
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http2.Http2Codec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.InputStream getInputStream()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.horcrux.svg.SymbolView: void setMeetOrSlice(int)
com.horcrux.svg.PathView
okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setChunkedStreamingMode(int)
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void clear(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
okhttp3.Headers: java.lang.String[] namesAndValues
okhttp3.Address: java.net.ProxySelector proxySelector
okhttp3.RealCall: boolean isExecuted()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_INSTANCE_INIT_START
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
okhttp3.Response: void close()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.soloader.SoLoader$Api14Utils: SoLoader$Api14Utils()
com.reactnativecommunity.webview.RNCWebViewManager: android.webkit.WebView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
okhttp3.RequestBody$2: RequestBody$2(okhttp3.MediaType,int,byte[],int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
okhttp3.internal.connection.RealConnection: void startHttp2(int)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.JavaScriptContextHolder
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener
okhttp3.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.facebook.react.views.slider.ReactSlider: void setMinValue(double)
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
okhttp3.ConnectionSpec: int hashCode()
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.facebook.react.bridge.NativeArrayInterface
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.facebook.react.bridge.CxxModuleWrapper
okhttp3.internal.platform.AndroidPlatform: boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
okhttp3.Cache: void initialize()
com.facebook.react.bridge.BaseJavaModule
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: NativeDatePickerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Dispatcher: boolean promoteAndExecute()
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.horcrux.svg.RenderableViewManager$ClipPathViewManager
okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.facebook.imagepipeline.platform.PreverificationHelper
okhttp3.Cookie: Cookie(okhttp3.Cookie$Builder)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setSendContentSizeChangeEvents(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
com.facebook.react.bridge.queue.MessageQueueThreadSpec
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long)
com.horcrux.svg.RenderableViewManager$RadialGradientManager
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(com.horcrux.svg.PatternView,float)
okhttp3.OkHttpClient: OkHttpClient()
com.horcrux.svg.ImageView: void setSrc(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
okhttp3.internal.platform.JdkWithJettyBootPlatform: JdkWithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaMethodWrapper$4
okhttp3.internal.http1.Http1Codec$ChunkedSink: okhttp3.internal.http1.Http1Codec this$0
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.horcrux.svg.PatternView: void setPatternContentUnits(int)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onFailure(double,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.Cookie: boolean httpOnly()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
okhttp3.internal.cache.CacheRequest: okio.Sink body()
okhttp3.internal.http2.Http2Reader$Handler: void ackSettings()
androidx.lifecycle.ViewModel: ViewModel()
okhttp3.internal.huc.OkHttpsURLConnection: void setFixedLengthStreamingMode(int)
com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)
okhttp3.internal.ws.RealWebSocket$CancelRunnable: void run()
com.facebook.react.bridge.NativeArgumentsParseException
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PING
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine valueOf(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: long getContentLengthLong()
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
okhttp3.Cache$2
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
okhttp3.internal.http2.Http2Connection$5: void execute()
okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.WritableNativeMap)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
okhttp3.RequestBody$1: okhttp3.MediaType val$contentType
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
okhttp3.Headers$Builder
com.horcrux.svg.RenderableViewManager: void resetTransformProperty(android.view.View)
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
com.facebook.react.modules.debug.AnimationsDebugModule
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.facebook.react.views.picker.ReactDropdownPickerManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Http2Connection: boolean access$302(okhttp3.internal.http2.Http2Connection,boolean)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.picker.ReactPickerManager: void receiveCommand(com.facebook.react.views.picker.ReactPicker,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableMap
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
okhttp3.RealCall: okhttp3.OkHttpClient client
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
okhttp3.internal.http2.Http2Writer: boolean client
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
okhttp3.internal.ws.WebSocketProtocol: java.lang.String ACCEPT_MAGIC
com.horcrux.svg.SvgViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)
okhttp3.Authenticator$1
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
okhttp3.internal.http2.Http2Codec$StreamFinishingSource
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
okhttp3.internal.http1.Http1Codec: java.lang.String readHeaderLine()
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: boolean hasNextKey()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
okhttp3.internal.connection.RouteException: java.io.IOException lastException
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue access$300(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue mPreOperations
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderField(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.facebook.yoga.YogaLogger
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.Object x509TrustManagerExtensions
okhttp3.internal.cache2.Relay: void writeHeader(okio.ByteString,long,long)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
okio.AsyncTimeout: void enter()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String getName()
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JavaMethodWrapper$10
okhttp3.internal.huc.OkHttpURLConnection: OkHttpURLConnection(java.net.URL,okhttp3.OkHttpClient)
okhttp3.ResponseBody: java.lang.String string()
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
okhttp3.internal.huc.OkHttpsURLConnection: java.util.Map getHeaderFields()
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Reader$Handler: void settings(boolean,okhttp3.internal.http2.Settings)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
okhttp3.CipherSuite: java.util.List forJavaNames(java.lang.String[])
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)
okhttp3.RealCall$AsyncCall: boolean $assertionsDisabled
okhttp3.internal.cache.InternalCache: okhttp3.Response get(okhttp3.Request)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
okhttp3.internal.Util$2: boolean val$daemon
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
okhttp3.Address: java.util.List connectionSpecs
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String hostname
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
okhttp3.internal.ws.WebSocketProtocol: int B0_MASK_OPCODE
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ContextBaseJavaModule
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: NativeAsyncLocalStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.views.picker.ReactPickerManager: void setPrompt(com.facebook.react.views.picker.ReactPicker,java.lang.String)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.horcrux.svg.RenderableViewManager$ImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.ContentFrameLayout
okhttp3.Handshake: java.util.List peerCertificates
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
com.facebook.jni.CppSystemErrorException: int errorCode
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams(int)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: android.app.DownloadManager$Request downloadRequest
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Stream val$newStream
com.horcrux.svg.RenderableViewManager$EllipseViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Call call
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.Route: java.lang.String toString()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.facebook.react.modules.network.NetworkingModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
com.reactnativecommunity.webview.RNCWebViewModule: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock shouldOverrideUrlLoadingLock
okhttp3.HttpUrl: int defaultPort(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.MediaType: java.lang.String QUOTED
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.ws.WebSocketWriter$FrameSink: long contentLength
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
okhttp3.WebSocket: long queueSize()
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
com.horcrux.svg.SvgViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.bridge.ModuleSpec: java.lang.Class getType()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
okhttp3.internal.http1.Http1Codec: int STATE_OPEN_RESPONSE_BODY
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
okhttp3.internal.huc.StreamedRequestBody
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Settings: int size()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.horcrux.svg.SvgView: void setVbHeight(float)
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
okhttp3.Cookie$Builder
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Reader$Handler
okhttp3.internal.http1.Http1Codec: int STATE_READING_RESPONSE_BODY
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
okhttp3.Cache$Entry: java.lang.String message
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
com.horcrux.svg.RectView: void setRx(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.horcrux.svg.VirtualView: void setClipPath(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager
com.horcrux.svg.SvgViewManager: void setVbWidth(com.horcrux.svg.SvgView,float)
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
com.horcrux.svg.RenderableView: java.util.ArrayList getAttributeList()
com.horcrux.svg.RenderableViewManager$DefsViewManager: RenderableViewManager$DefsViewManager()
okhttp3.internal.cache.CacheStrategy$Factory
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route()
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String getName()
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.jni.IteratorHelper: boolean hasNext()
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(long)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIManagerModule: java.util.Map mViewManagerConstantsCache
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
okhttp3.HttpUrl: java.lang.String encodedQuery()
okhttp3.internal.ws.RealWebSocket$1
okhttp3.internal.cache2.Relay$RelaySource: long sourcePos
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
okhttp3.Interceptor$Chain: okhttp3.Call call()
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
okhttp3.internal.tls.DistinguishedNameParser: int cur
okhttp3.internal.http2.Http2: byte TYPE_SETTINGS
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.http2.Settings: int INITIAL_WINDOW_SIZE
okhttp3.CacheControl
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath()
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ScrollingTabContainerView
androidx.core.app.CoreComponentFactory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
okhttp3.internal.io.FileSystem$1: FileSystem$1()
com.facebook.react.devsupport.JSDevSupport: void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
okhttp3.internal.http1.Http1Codec$ChunkedSource: boolean hasMoreChunks
okio.Timeout: boolean hasDeadline
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean)
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String NAME
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean usingProxy()
com.horcrux.svg.RenderableViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getResponseMessage()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String getName()
okhttp3.Headers: void checkName(java.lang.String)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
okhttp3.internal.cache.CacheRequest: void abort()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
okhttp3.internal.huc.OutputStreamRequestBody: okhttp3.MediaType contentType()
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
okhttp3.internal.cache.InternalCache: void trackConditionalCacheHit()
okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
okhttp3.internal.http2.Http2Connection$5: Http2Connection$5(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
okhttp3.internal.http1.Http1Codec: int state
okhttp3.internal.http1.Http1Codec$ChunkedSource: long read(okio.Buffer,long)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
okhttp3.internal.http.HttpHeaders: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
okhttp3.RealCall: okhttp3.RealCall clone()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.horcrux.svg.RenderableViewManager$CircleViewManager: RenderableViewManager$CircleViewManager()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.horcrux.svg.RenderableViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getHeaderFieldInt(java.lang.String,int)
com.horcrux.svg.RenderableView: void setStrokeDasharray(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
okhttp3.internal.Util: java.lang.reflect.Method addSuppressedExceptionMethod
androidx.appcompat.widget.AppCompatImageButton
okhttp3.CacheControl$Builder: int minFreshSeconds
okhttp3.internal.ws.WebSocketWriter: boolean activeWriter
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
com.horcrux.svg.RenderableViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
okhttp3.ConnectionSpec: java.util.List cipherSuites()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
okhttp3.internal.http.HttpHeaders
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getLastModified()
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random)
okhttp3.internal.connection.RouteException
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setUseSessionTickets
okhttp3.internal.http2.Http2Connection$7: okhttp3.internal.http2.Http2Connection this$0
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
okhttp3.internal.http2.Http2Connection
okhttp3.internal.ws.WebSocketReader: int opcode
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
okhttp3.RealCall
okhttp3.internal.http2.Http2Writer
com.facebook.react.modules.core.JavaTimerManager
com.horcrux.svg.TextPathView: void setSide(java.lang.String)
okhttp3.internal.connection.RealConnection: java.lang.String NPE_THROW_WITH_NULL
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
okhttp3.internal.http.HttpDate: java.util.Date parse(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.horcrux.svg.LinearGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode[] values()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
okhttp3.internal.huc.OkHttpsURLConnection: java.security.cert.Certificate[] getServerCertificates()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String,long)
com.horcrux.svg.RenderableViewManager: void setStrokeLinejoin(com.horcrux.svg.RenderableView,int)
com.horcrux.svg.RenderableViewManager$PathViewManager: RenderableViewManager$PathViewManager()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.cert.Certificate[] getServerCertificates()
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.horcrux.svg.RenderableViewManager: double[] sTransformDecompositionArray
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Response)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
okhttp3.HttpUrl: char[] HEX_DIGITS
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule: void getJSHierarchy(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,boolean)
okhttp3.internal.http.HttpHeaders: int skipAll(okio.Buffer,byte)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
com.horcrux.svg.SvgViewManager: void setSvgView(int,com.horcrux.svg.SvgView)
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.horcrux.svg.PatternView: void setMinX(float)
okhttp3.internal.platform.JdkWithJettyBootPlatform
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
okhttp3.internal.http2.Http2Connection$6: int val$byteCount
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
okhttp3.CacheControl: boolean onlyIfCached
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getResponseMessage()
okhttp3.CacheControl: boolean onlyIfCached()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String TAG
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
okhttp3.internal.http2.Huffman$Node: int terminalBits
com.reactnativecommunity.webview.RNCWebViewManager: void setOnContentSizeChange(android.webkit.WebView,boolean)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.fbreact.specs.NativeI18nManagerSpec
okhttp3.internal.http2.Http2Stream: void setHeadersListener(okhttp3.internal.http2.Header$Listener)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.horcrux.svg.TSpanView
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
okhttp3.MultipartBody$Builder
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
okhttp3.Request: java.lang.String method
okhttp3.Cookie: java.lang.String name()
okhttp3.internal.http2.Hpack$Reader: int readByte()
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
okhttp3.internal.http2.Http2Connection: void writePingAndAwaitPong()
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
okhttp3.Cache$1: void update(okhttp3.Response,okhttp3.Response)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setIgnoreErrFailedForThisURL(java.lang.String)
okhttp3.OkHttpClient: int connectTimeout
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET
com.horcrux.svg.TextView: void setTextLength(com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.JSDevSupport: JSDevSupport(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
com.horcrux.svg.RenderableViewManager$CircleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String mUserAgent
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.jni.MapIteratorHelper
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
okhttp3.internal.http2.Http2Codec: java.lang.String TRANSFER_ENCODING
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgent(android.webkit.WebView,java.lang.String)
okhttp3.internal.http2.Http2Codec: okhttp3.internal.http2.Http2Stream stream
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okhttp3.internal.http1.Http1Codec this$0
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
okhttp3.internal.http2.Http2Writer: void connectionPreface()
okhttp3.internal.ws.WebSocketProtocol
okhttp3.internal.http2.Http2Connection$5: java.util.List val$requestHeaders
com.facebook.react.uimanager.SimpleViewManager
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
com.horcrux.svg.PatternView
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
okhttp3.MultipartBody: long contentLength
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.MultipartBody: java.lang.String boundary()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
okhttp3.Response: java.lang.String message
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
com.horcrux.svg.RenderableViewManager: void onAfterUpdateTransaction(com.horcrux.svg.VirtualView)
okhttp3.internal.ws.RealWebSocket$Close: int code
okhttp3.RequestBody$2: int val$byteCount
com.facebook.jni.DestructorThread$1
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
okhttp3.internal.http2.Huffman: Huffman()
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.internal.huc.OkHttpsURLConnection: long getLastModified()
okhttp3.internal.http2.Settings: void clear()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
okhttp3.Response$Builder: java.lang.String message
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.EventListener$1: EventListener$1()
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
com.horcrux.svg.UseView: void setX(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
okhttp3.RequestBody$1: okhttp3.MediaType contentType()
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: okhttp3.internal.http2.Settings val$settings
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
okhttp3.Address: java.net.ProxySelector proxySelector()
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method putMethod
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getContentEncoding()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
com.facebook.react.modules.dialog.DialogModule: void initialize()
com.facebook.react.views.slider.ReactSliderManager: void setStep(android.view.View,double)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.Cache$CacheRequestImpl$1: Cache$CacheRequestImpl$1(okhttp3.Cache$CacheRequestImpl,okio.Sink,okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
com.horcrux.svg.RectView: void setRy(com.facebook.react.bridge.Dynamic)
okhttp3.OkHttpClient$1: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.tls.OkHostnameVerifier: int ALT_IPA_NAME
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
okhttp3.Headers: java.util.Set names()
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
okhttp3.internal.http.HttpMethod: HttpMethod()
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
okhttp3.internal.http2.Huffman$Node
com.reactnativecommunity.webview.RNCWebViewModule: android.app.Activity access$100(com.reactnativecommunity.webview.RNCWebViewModule)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setOpacity(android.view.View,float)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
okhttp3.internal.http2.Http2Connection$7: okhttp3.internal.http2.ErrorCode val$errorCode
okhttp3.internal.ws.RealWebSocket: void runWriter()
okhttp3.internal.http1.Http1Codec: okio.Sink newFixedLengthSink(long)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
androidx.core.content.FileProvider: FileProvider()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
okhttp3.Protocol: okhttp3.Protocol SPDY_3
android.support.v4.graphics.drawable.IconCompatParcelizer
okhttp3.internal.cache.DiskLruCache$Editor
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
okhttp3.package-info
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
okhttp3.internal.connection.StreamAllocation: java.net.Socket deallocate(boolean,boolean,boolean)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
androidx.appcompat.widget.ActionBarOverlayLayout
okhttp3.Response: okhttp3.CacheControl cacheControl()
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method warnIfOpenMethod
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.horcrux.svg.SvgViewManager: void setTintColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.reactnativecommunity.webview.RNCWebViewManager: void setupWebChromeClient(com.facebook.react.bridge.ReactContext,android.webkit.WebView)
okhttp3.internal.connection.RouteException: java.io.IOException firstException
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
okhttp3.internal.connection.RealConnection: int MAX_TUNNEL_ATTEMPTS
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.facebook.react.views.slider.ReactSliderManager: ReactSliderManager()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
okhttp3.CookieJar$1: CookieJar$1()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_EXCEPTION
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
okhttp3.internal.huc.OkHttpURLConnection: java.net.Proxy proxy
okhttp3.RequestBody$3
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Stream: void receiveFin()
okhttp3.CertificatePinner$Pin: java.lang.String pattern
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(com.horcrux.svg.SymbolView,float)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.Class clientProviderClass
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean arrayContainsString(java.lang.String[],java.lang.String)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
com.facebook.react.bridge.CallbackImpl
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
okhttp3.internal.platform.Platform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream(int)
com.facebook.react.views.picker.ReactDialogPickerManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
okhttp3.internal.cache.DiskLruCache$Editor$1: void onException(java.io.IOException)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.Connection: okhttp3.Protocol protocol()
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.facebook.react.devsupport.JSException
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.Route: java.net.InetSocketAddress inetSocketAddress
okhttp3.internal.huc.OkHttpsURLConnection: void connect()
okhttp3.Route: okhttp3.Address address
com.facebook.react.modules.systeminfo.AndroidInfoModule
okhttp3.internal.cache.CacheInterceptor$1: CacheInterceptor$1(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
okhttp3.internal.http1.Http1Codec: okio.Source newUnknownLengthSource()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.ws.RealWebSocket: long queueSize
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
okhttp3.FormBody: int size()
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
okhttp3.internal.Util: java.nio.charset.Charset UTF_16_BE
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView$RNCWebViewBridge
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setOpacity(android.view.View,float)
okhttp3.internal.huc.OkHttpsURLConnection: java.util.Map getRequestProperties()
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)
okhttp3.Dns$1
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.horcrux.svg.PatternView: void setMinY(float)
com.horcrux.svg.RenderableViewManager$LineViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
okhttp3.internal.http.HttpMethod
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
okhttp3.Dispatcher: int getMaxRequestsPerHost()
okio.AsyncTimeout: void exit(boolean)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
com.horcrux.svg.PatternView: void setPatternTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
okhttp3.ConnectionPool: boolean cleanupRunning
okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
okhttp3.internal.URLFilter
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
okhttp3.internal.huc.OkHttpURLConnection: void disconnect()
okhttp3.internal.http2.Http2Connection: long DEGRADED_PONG_TIMEOUT_NS
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(com.horcrux.svg.PatternView,float)
com.facebook.react.bridge.CatalystInstanceImpl$Builder
okhttp3.internal.http1.Http1Codec$FixedLengthSink
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
com.facebook.react.bridge.DynamicFromArray: int mIndex
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: RenderableViewManager$ClipPathViewManager()
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
okhttp3.internal.http2.Hpack: int PREFIX_5_BITS
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
okhttp3.internal.http1.Http1Codec: void cancel()
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
okhttp3.ResponseBody: byte[] bytes()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
com.horcrux.svg.RenderableViewManager: void setOpacity(android.view.View,float)
okhttp3.internal.http1.Http1Codec: okio.BufferedSink sink
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
com.facebook.react.bridge.NoSuchKeyException
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
okhttp3.internal.huc.OutputStreamRequestBody$1: void write(int)
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.InternalCache cache
okhttp3.OkHttpClient$1: int code(okhttp3.Response$Builder)
com.facebook.react.modules.storage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okio.ForwardingSource: okio.Source delegate
okhttp3.Request: java.lang.Object tag(java.lang.Class)
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
okhttp3.RealCall$AsyncCall: java.lang.String host()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3
okhttp3.Credentials
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewModule: void downloadFile()
okhttp3.WebSocket: boolean send(java.lang.String)
androidx.appcompat.widget.ActionBarContainer
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.modules.clipboard.ClipboardModule
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RadialGradientView: void setCx(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean canceled
okhttp3.OkHttpClient$Builder: int writeTimeout
okhttp3.internal.http2.Header$Listener: void onHeaders(okhttp3.Headers)
okhttp3.internal.ws.RealWebSocket: int sentPingCount
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
okhttp3.Response: okhttp3.ResponseBody body()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
okhttp3.Response: okhttp3.Response priorResponse
okhttp3.Cache$2: java.lang.Object next()
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getResponseCode()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.Object getContent()
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET
okhttp3.Dns
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.horcrux.svg.DefsView
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
okhttp3.internal.cache.DiskLruCache: java.lang.String MAGIC
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
okhttp3.internal.tls.DistinguishedNameParser: char getUTF8()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
okhttp3.internal.http1.Http1Codec$ChunkedSink: void write(okio.Buffer,long)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
okhttp3.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
okhttp3.internal.ws.RealWebSocket: long MAX_QUEUE_SIZE
com.horcrux.svg.SymbolView
okhttp3.ConnectionSpec: boolean tls
com.horcrux.svg.EllipseView: void setCx(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
okhttp3.internal.Internal: Internal()
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.Address: okhttp3.HttpUrl url
okhttp3.internal.http1.Http1Codec: okio.Sink newChunkedSink()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updatePropsMountItem(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RenderableView
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.horcrux.svg.RenderableViewManager$PathViewManager: void onAfterUpdateTransaction(android.view.View)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingModuleName(android.webkit.WebView,java.lang.String)
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
okio.ForwardingSource: ForwardingSource(okio.Source)
com.horcrux.svg.RenderableViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: void close()
okhttp3.MultipartBody: java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.bridge.JSApplicationCausedNativeException
com.horcrux.svg.PatternView: void setVbWidth(float)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.horcrux.svg.SvgViewManager: void updateExtraData(com.facebook.react.views.view.ReactViewGroup,java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
okhttp3.internal.http2.Http2Connection$6: Http2Connection$6(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean)
okhttp3.MultipartBody
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String NAME
com.horcrux.svg.PatternView: void setMeetOrSlice(int)
okhttp3.internal.http2.Header: okio.ByteString value
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setLengthAdjust(com.horcrux.svg.TextView,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
okio.Timeout: okio.Timeout clearTimeout()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
okhttp3.Cache: long maxSize()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.react.views.slider.ReactSliderManager: void setValue(android.view.View,double)
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
okhttp3.WebSocket: okhttp3.Request request()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable
okhttp3.internal.huc.OkHttpsURLConnection: int getContentLength()
okhttp3.Credentials: Credentials()
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust[] values()
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
okhttp3.internal.platform.Android10Platform: void enableSessionTickets(javax.net.ssl.SSLSocket)
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MODE
okhttp3.internal.huc.OutputStreamRequestBody$1: OutputStreamRequestBody$1(okhttp3.internal.huc.OutputStreamRequestBody,long,okio.BufferedSink)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(com.horcrux.svg.SymbolView,float)
com.facebook.react.uimanager.ViewGroupManager: boolean shouldPromoteGrandchildren()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
okhttp3.internal.http.CallServerInterceptor$CountingSink: CallServerInterceptor$CountingSink(okio.Sink)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
com.facebook.react.fabric.Binding
okhttp3.HttpUrl$Builder: java.lang.String scheme
okhttp3.Address: javax.net.SocketFactory socketFactory()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
okhttp3.internal.cache2.Relay: okio.ByteString metadata
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
okhttp3.FormBody$Builder
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.facebook.react.views.picker.ReactDropdownPickerManager: void setSelected(android.view.View,int)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
okhttp3.ConnectionSpec: java.lang.String[] cipherSuites
okhttp3.internal.http2.Http2Connection$2: long val$unacknowledgedBytesRead
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
okio.ForwardingSource: long read(okio.Buffer,long)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.horcrux.svg.SvgViewManager
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
okhttp3.internal.huc.OkHttpsURLConnection: void setDefaultUseCaches(boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
okhttp3.HttpUrl: java.lang.String scheme()
com.facebook.react.views.text.ReactTextInlineImageShadowNode
okhttp3.Authenticator$1: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okhttp3.internal.http2.Http2Stream$FramingSource: void receive(okio.BufferedSource,long)
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
okhttp3.Interceptor$Chain: int readTimeoutMillis()
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(com.horcrux.svg.SvgView,int)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setAlpnProtocols
com.facebook.jni.UnknownCppException
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setUseCaches(boolean)
okhttp3.Address: okhttp3.Dns dns()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDoOutput(boolean)
okhttp3.OkHttpClient: java.util.List connectionSpecs()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
okhttp3.Cache: void delete()
okhttp3.internal.Util: int decodeHexDigit(char)
okhttp3.internal.platform.ConscryptPlatform
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
okhttp3.Cookie$Builder: java.lang.String domain
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(okio.Buffer)
okhttp3.MediaType: int hashCode()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.horcrux.svg.TextView: void setPositionY(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method getMethod
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
okhttp3.Headers$Builder: java.util.List namesAndValues
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.StreamAllocation,boolean,okhttp3.Request)
com.horcrux.svg.RenderableViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String getName()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
okhttp3.internal.io.FileSystem: void delete(java.io.File)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getIfModifiedSince()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.horcrux.svg.RenderableViewManager: void invalidateSvgView(com.horcrux.svg.VirtualView)
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: boolean unsupported
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.facebook.fbreact.specs.NativeDevSettingsSpec
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
okhttp3.internal.http.RealInterceptorChain: int calls
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(com.horcrux.svg.PatternView,java.lang.String)
com.facebook.react.views.slider.ReactSlider: void setValue(double)
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.JSInstance
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1: OkHttpURLConnection$UnexpectedException$1()
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Principal getLocalPrincipal()
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_INSTANCE_INIT_END
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
okhttp3.internal.NamedRunnable: NamedRunnable(java.lang.String,java.lang.Object[])
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method removeMethod
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
okhttp3.Request$Builder: okhttp3.RequestBody body
okhttp3.internal.connection.RealConnection: okhttp3.Route route
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewModule: RNCWebViewModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.horcrux.svg.PatternView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
okhttp3.internal.http2.Http2Connection$4: Http2Connection$4(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List)
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
okhttp3.Response: okhttp3.Response networkResponse()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgentString(android.webkit.WebView)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.Util: okio.ByteString UTF_16_BE_BOM
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
okhttp3.internal.http.RetryAndFollowUpInterceptor: int MAX_FOLLOW_UPS
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(com.horcrux.svg.MaskView,int)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
okhttp3.internal.huc.OkHttpsURLConnection: void disconnect()
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair removeTouchesAtIndices(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okhttp3.FormBody: java.lang.String name(int)
okhttp3.TlsVersion: java.lang.String javaName()
androidx.appcompat.widget.AppCompatTextView
com.horcrux.svg.RenderableViewManager$SVGClass: com.horcrux.svg.RenderableViewManager$SVGClass valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
com.facebook.react.uimanager.LayoutShadowNode
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.internal.Internal: java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.horcrux.svg.VirtualView: void setClipRule(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.fbreact.specs.NativeModalManagerSpec
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.facebook.react.views.textinput.ReactTextInputManager: android.widget.EditText createInternalEditText(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.OkHttpClient: int readTimeoutMillis()
okhttp3.Challenge: java.lang.String scheme
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
okhttp3.Call: void enqueue(okhttp3.Callback)
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(com.horcrux.svg.UseView,java.lang.String)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
com.facebook.react.uimanager.ViewManager
com.facebook.react.bridge.ReactContext$1: void run()
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
com.reactnativecommunity.webview.RNCWebViewModule: android.app.DownloadManager$Request access$000(com.reactnativecommunity.webview.RNCWebViewModule)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline valueOf(java.lang.String)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Header$Listener headersListener
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
com.facebook.react.views.picker.ReactPicker
okhttp3.Request$Builder: okhttp3.Request$Builder head()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
com.facebook.react.fabric.ReactNativeConfig
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
okhttp3.internal.huc.OkHttpsURLConnection: java.io.OutputStream getOutputStream()
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
okhttp3.internal.http2.Http2Connection: long awaitPongsReceived
com.horcrux.svg.RenderableViewManager$LineViewManager
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
okhttp3.internal.http2.Http2Stream: void writeHeaders(java.util.List,boolean)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.blob.BlobModule: java.lang.String getName()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
okhttp3.internal.http2.Http2Reader$ContinuationSource: byte flags
com.horcrux.svg.RenderableView: void setStrokeWidth(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PONG
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
com.facebook.react.views.scroll.ReactScrollView
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
okhttp3.internal.connection.StreamAllocation: boolean released
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
okhttp3.internal.huc.OkHttpsURLConnection: void setChunkedStreamingMode(int)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
okhttp3.internal.connection.RealConnection: boolean isMultiplexed()
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection: java.util.Map getHeaderFields()
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(com.horcrux.svg.TextPathView,java.lang.String)
okhttp3.internal.tls.BasicCertificateChainCleaner
com.horcrux.svg.VirtualView: void setOnLayout(boolean)
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
com.facebook.react.modules.core.TimingModule: void onHostPause()
okhttp3.internal.ws.RealWebSocket$2
androidx.core.widget.NestedScrollView: int getScrollRange()
okio.Timeout: okio.Timeout clearDeadline()
okhttp3.internal.http2.Http2Connection$6
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.lang.String nextKey()
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback)
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.facebook.jni.NativeRunnable: void run()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String MODULE_NAME
okhttp3.internal.huc.OkHttpsURLConnection: void setIfModifiedSince(long)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(android.view.View,boolean)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)
okhttp3.internal.http2.Http2: java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[])
okhttp3.internal.Version: java.lang.String userAgent()
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
okhttp3.Cache: int VERSION
okhttp3.MultipartBody: okhttp3.MediaType contentType
com.facebook.react.views.text.ReactVirtualTextViewManager
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.facebook.yoga.YogaLogLevel
com.facebook.react.views.picker.ReactDropdownPickerManager: ReactDropdownPickerManager()
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.facebook.react.bridge.PerformanceCounter
com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
okhttp3.internal.ws.RealWebSocket$2: okhttp3.Request val$request
okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean closed
okhttp3.Response: int code
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
okhttp3.internal.http1.Http1Codec$FixedLengthSink: long bytesRemaining
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
com.facebook.react.views.picker.ReactDropdownPickerManager: void setBackgroundColor(com.facebook.react.views.picker.ReactPicker,int)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.horcrux.svg.RenderableViewManager$LineViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
okio.ForwardingSink: ForwardingSink(okio.Sink)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
okhttp3.Response: okhttp3.Response cacheResponse
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.PatternView: void setAlign(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File outputVideo
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getDate()
okhttp3.FormBody$Builder: java.util.List names
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
com.reactnativecommunity.webview.RNCWebViewModule: void onShouldStartLoadWithRequestCallback(boolean,int)
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.OkHttpClient: okhttp3.Dns dns
okhttp3.OkUrlFactory: okhttp3.OkUrlFactory clone()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
okhttp3.Request$Builder: okhttp3.Request$Builder get()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
okhttp3.OkHttpClient: boolean followRedirects
okhttp3.internal.cache2.FileOperator: java.nio.channels.FileChannel fileChannel
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
okhttp3.Request: boolean isHttps()
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
okhttp3.internal.cache.DiskLruCache: void readJournal()
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
okhttp3.Cookie: long parseMaxAge(java.lang.String)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.slider.ReactSliderManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()
com.horcrux.svg.RenderableViewManager$TextViewManager
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String toHumanReadableAscii(java.lang.String)
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderField(int)
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.facebook.fbreact.specs.NativeSettingsManagerSpec
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
okhttp3.HttpUrl: java.lang.String username()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
okhttp3.Cookie: boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.react.views.scroll.ReactHorizontalScrollView
com.horcrux.svg.RenderableViewManager$RectViewManager: void setOpacity(android.view.View,float)
okhttp3.FormBody
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide[] values()
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
com.facebook.react.bridge.Inspector$Page: int getId()
okhttp3.ResponseBody: java.io.Reader reader
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean forWebSocket
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextPathViewManager
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.horcrux.svg.SvgViewManager: SvgViewManager()
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
com.facebook.react.views.picker.ReactDialogPickerManager: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
okhttp3.Cookie: java.lang.String name
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.horcrux.svg.RadialGradientView: void setCy(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.horcrux.svg.RenderableViewManager$RectViewManager: RenderableViewManager$RectViewManager()
okhttp3.CertificatePinner$Pin: int hashCode()
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
okhttp3.HttpUrl: java.lang.String QUERY_ENCODE_SET
okhttp3.internal.http2.Hpack$Writer: int headerCount
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
okhttp3.internal.http2.Settings: int ENABLE_PUSH
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Permission getPermission()
okhttp3.internal.Util$1: Util$1()
okhttp3.internal.cache2.Relay: int sourceCount
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.facebook.jni.DestructorThread$Terminus: void destruct()
okhttp3.internal.http2.Http2Connection: long access$100(okhttp3.internal.http2.Http2Connection)
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.views.text.ReactTextViewManager
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle[] values()
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET_URI
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
okhttp3.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
okhttp3.ResponseBody$1: okio.BufferedSource source()
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
okhttp3.Request: java.lang.String toString()
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
okhttp3.Response$Builder: Response$Builder()
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http.HttpCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
okhttp3.OkHttpClient: okhttp3.Cache cache()
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
okhttp3.internal.huc.OkHttpsURLConnection: long getExpiration()
com.horcrux.svg.ImageView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager: void setClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
okhttp3.internal.cache2.Relay: long upstreamPos
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.internal.tls.TrustRootIndex
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
okhttp3.internal.http2.Http2Connection$6: int val$streamId
okhttp3.ConnectionPool: okhttp3.internal.connection.RouteDatabase routeDatabase
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
com.facebook.react.bridge.NativeModuleRegistry
okhttp3.internal.huc.OkHttpURLConnection: void setConnectTimeout(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
okhttp3.internal.http2.Http2Connection: void pushDataLater(int,okio.BufferedSource,int,boolean)
com.facebook.react.fabric.ReactNativeConfig: int getInt64(java.lang.String)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: NativeDevSplitBundleLoaderSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableViewManager$GroupViewManager
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheEnabled(android.webkit.WebView,boolean)
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDoInput()
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String getName()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.OutputStream getOutputStream()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Cache: int ENTRY_METADATA
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
okhttp3.internal.http2.Http2: byte TYPE_GOAWAY
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
okio.ForwardingSink: okio.Timeout timeout()
okhttp3.RealCall: boolean forWebSocket
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
okhttp3.internal.http2.Http2Connection$3
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ActivityEventListener
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
com.facebook.react.views.modal.ReactModalHostView
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
okhttp3.internal.http2.Http2Connection: void start()
okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsVerticalScrollIndicator(android.webkit.WebView,boolean)
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
com.facebook.react.modules.websocket.WebSocketModule
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
com.facebook.react.views.view.ReactViewGroup
com.facebook.jni.DestructorThread$DestructorStack
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
okhttp3.Headers: java.util.List values(java.lang.String)
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
okhttp3.internal.http2.PushObserver$1: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: void execute()
okhttp3.internal.io.FileSystem$1: okio.Sink sink(java.io.File)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
okhttp3.EventListener
okhttp3.internal.http2.Http2Stream: long unacknowledgedBytesRead
com.facebook.react.views.slider.ReactSliderManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.bridge.ReactSoftException: void clearListeners()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
okhttp3.JavaNetAuthenticator: JavaNetAuthenticator()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String JAVASCRIPT_INTERFACE
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
okhttp3.Cookie: boolean hostOnly()
com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String getName()
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
okhttp3.RealCall: okhttp3.Response execute()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.react.modules.sound.SoundManagerModule
okhttp3.Cookie: java.lang.String domain
okhttp3.internal.tls.DistinguishedNameParser: int pos
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
com.facebook.react.bridge.WindowFocusChangeListener
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
com.facebook.react.modules.core.TimingModule: void onCatalystInstanceDestroy()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
okhttp3.internal.connection.RouteDatabase
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ReadableArray: int size()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
okhttp3.internal.cache.InternalCache
com.facebook.react.bridge.ReadableNativeMap$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
com.facebook.react.bridge.ReactContext
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
okhttp3.RealCall$AsyncCall: void execute()
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
okhttp3.RequestBody$3: okhttp3.MediaType contentType()
okhttp3.internal.Util$1
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: AndroidPlatform$AndroidCertificateChainCleaner(java.lang.Object,java.lang.reflect.Method)
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
okhttp3.Cache: int requestCount
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
okhttp3.internal.cache.DiskLruCache: java.lang.String READ
okhttp3.Challenge: java.lang.String realm()
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,boolean)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.io.FileSystem$1: okio.Sink appendingSink(java.io.File)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: android.net.Uri getOutputUri(java.io.File)
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
okhttp3.internal.cache.DiskLruCache$3: java.util.Iterator delegate
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2: byte FLAG_END_STREAM
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Response)
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.facebook.react.devsupport.JSDevSupport: void onFailure(double,java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
okhttp3.EventListener$1
com.reactnativecommunity.webview.RNCWebViewManager: void setSource(android.webkit.WebView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaMethodWrapper$8
okhttp3.internal.cache2.Relay: okio.Source newSource()
okhttp3.internal.Util$2: java.lang.Thread newThread(java.lang.Runnable)
androidx.appcompat.widget.ViewStubCompat
okhttp3.Headers
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getCipherSuite()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
com.reactnativecommunity.webview.RNCWebViewModule: void isFileUploadSupported(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
okhttp3.CacheControl: CacheControl(okhttp3.CacheControl$Builder)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl$1$1
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET_URI
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
com.reactnativecommunity.webview.RNCWebViewFileProvider
okhttp3.internal.platform.OptionalMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
okhttp3.internal.huc.OkHttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean)
okhttp3.internal.connection.StreamAllocation: int refusedStreamCount
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccessFromFileURLs(android.webkit.WebView,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] EMPTY_RULE
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
okhttp3.RequestBody
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)
okhttp3.internal.http1.Http1Codec$ChunkedSink: okio.ForwardingTimeout timeout
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
okhttp3.internal.http2.Http2Codec: okio.Sink createRequestBody(okhttp3.Request,long)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)
okhttp3.internal.cache2.Relay: okio.Source upstream
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
okhttp3.internal.connection.RealConnection: void cancel()
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
okhttp3.internal.http1.Http1Codec: int STATE_IDLE
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setOpacity(android.view.View,float)
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
okhttp3.internal.platform.OptionalMethod: OptionalMethod(java.lang.Class,java.lang.String,java.lang.Class[])
okhttp3.Cookie: java.lang.String toString(boolean)
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
com.horcrux.svg.LineView: void setX1(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
okhttp3.internal.annotations.EverythingIsNonNull
com.facebook.react.bridge.JSBundleLoader$3
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(com.horcrux.svg.PatternView,int)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
okhttp3.internal.huc.DelegatingHttpsURLConnection: void disconnect()
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService access$400()
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.internal.connection.RouteSelector: java.util.List proxies
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString,int)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTML_MIME_TYPE
com.horcrux.svg.SvgViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
okio.ForwardingSink: void close()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setAllowUserInteraction(boolean)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setOpacity(android.view.View,float)
okhttp3.internal.http2.Http2Writer: boolean closed
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
okhttp3.internal.ws.RealWebSocket$Close: RealWebSocket$Close(int,okio.ByteString,long)
okhttp3.internal.ws.WebSocketWriter$FrameSink: void write(okio.Buffer,long)
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.reactnativecommunity.webview.RNCWebViewModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException: OkHttpURLConnection$UnexpectedException(java.lang.Throwable)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
okhttp3.internal.http2.Http2Stream$FramingSink
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.http.HttpCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.internal.http2.Http2Connection$3: void execute()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.huc.OkHttpsURLConnection: int getResponseCode()
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.horcrux.svg.RenderableViewManager$RectViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getTextRoot()
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
okhttp3.HttpUrl$Builder: int port
androidx.appcompat.widget.ActionBarContextView
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
okhttp3.internal.http2.Http2Connection: void pushResetLater(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.bridge.ReadableNativeArray
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
okhttp3.internal.http.RealResponseBody: long contentLength()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createBatchMountItem(int,com.facebook.react.fabric.mounting.mountitems.MountItem[],int,int)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.ws.RealWebSocket: java.util.concurrent.ScheduledExecutorService executor
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http.StatusLine
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.facebook.react.devsupport.HMRClient: void disable()
okhttp3.CacheControl: boolean noCache
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.JavaOnlyMap$1
com.facebook.jni.DestructorThread: DestructorThread()
okhttp3.internal.http2.Settings: int MAX_CONCURRENT_STREAMS
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
okhttp3.CacheControl: boolean immutable()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
okhttp3.ResponseBody$BomAwareReader
okhttp3.internal.http2.Http2Connection: long unacknowledgedBytesRead
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.bridge.FallbackJSBundleLoader
com.facebook.react.bridge.CatalystInstance: void initialize()
com.horcrux.svg.TextPathView: void setSpacing(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: java.lang.Class sslParametersClass
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToRunnable
okhttp3.internal.cache.CacheInterceptor$1: okhttp3.internal.cache.CacheRequest val$cacheRequest
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
okhttp3.internal.http.RetryAndFollowUpInterceptor
com.facebook.react.animated.NativeAnimatedModule: void access$400(com.facebook.react.animated.NativeAnimatedModule,java.util.Queue,long)
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
okhttp3.OkHttpClient: java.util.List networkInterceptors()
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
okhttp3.RealCall$1: okhttp3.RealCall this$0
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.http2.PushObserver$1: boolean onRequest(int,java.util.List)
com.horcrux.svg.RenderableViewManager: void setClipRule(com.horcrux.svg.VirtualView,int)
com.facebook.jni.DestructorThread$DestructorList
com.facebook.react.bridge.ReactContext$1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.Response: boolean isSuccessful()
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV3
okhttp3.Handshake: boolean equals(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: java.lang.Runnable cleanupRunnable
okhttp3.MediaType: java.lang.String toString()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod getAlpnSelectedProtocol
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
okhttp3.internal.connection.StreamAllocation: boolean reportedAcquired
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.GroupView
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(com.horcrux.svg.PatternView,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
okhttp3.internal.http2.Http2Codec: java.lang.String TE
okhttp3.internal.NamedRunnable: void execute()
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setTestID(android.view.View,java.lang.String)
okhttp3.internal.connection.RealConnection$1: okhttp3.internal.connection.StreamAllocation val$streamAllocation
okhttp3.internal.Util: java.util.TimeZone UTC
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
okhttp3.Handshake: java.util.List localCertificates
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
com.horcrux.svg.SymbolView: void setVbWidth(float)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
okhttp3.CacheControl: boolean mustRevalidate
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
okhttp3.RealCall: okio.Timeout timeout()
com.facebook.react.bridge.Dynamic: boolean isNull()
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_DIRTY
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildrenJNI(long)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.react.ReactActivity
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.lang.String selected
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager: void setStrokeDashoffset(com.horcrux.svg.RenderableView,float)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
com.horcrux.svg.LinearGradientView: void setY1(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
okhttp3.ConnectionPool: long cleanup(long)
okhttp3.ConnectionSpec: java.lang.String[] tlsVersions
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToSvgView
com.reactnativecommunity.webview.RNCWebViewModule: void onNewIntent(android.content.Intent)
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_INJECT_JAVASCRIPT
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.ws.WebSocketWriter$FrameSink: int formatOpcode
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
okhttp3.ResponseBody$BomAwareReader: ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset)
okio.ForwardingSource: okio.Source delegate()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
okio.ForwardingSink: okio.Sink delegate()
okhttp3.internal.http2.ErrorCode: int httpCode
okhttp3.Cache$1: Cache$1(okhttp3.Cache)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsImages(java.lang.String[])
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
okhttp3.WebSocket$Factory
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
okhttp3.Challenge: java.util.Map authParams()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String RESPONSE_SOURCE
com.facebook.react.bridge.JavaJSExecutor
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
com.horcrux.svg.UseView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
okhttp3.internal.http2.Http2Reader$Handler: void headers(boolean,int,int,java.util.List)
com.facebook.react.bridge.JSBundleLoader$5
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
okhttp3.internal.cache2.Relay: int SOURCE_FILE
okhttp3.Request: java.lang.Object tag()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
okhttp3.Route: boolean requiresTunnel()
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod[] values()
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
okhttp3.CookieJar$1: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.connection.ConnectInterceptor: okhttp3.OkHttpClient client
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
okhttp3.OkHttpClient: java.util.List protocols()
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.facebook.react.bridge.JavaMethodWrapper$6
okhttp3.internal.JavaNetHeaders: JavaNetHeaders()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
okhttp3.Challenge
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebChromeClient mWebChromeClient
okhttp3.CacheControl: int sMaxAgeSeconds()
okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
okhttp3.internal.cache.DiskLruCache: long size
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(com.horcrux.svg.SymbolView,int)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
okhttp3.internal.ws.RealWebSocket: void loopReader()
okhttp3.Request: okhttp3.HttpUrl url()
okhttp3.OkHttpClient$1
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.fabric.mounting.mountitems.BatchMountItem
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.proguard.annotations.KeepGettersAndSetters
okhttp3.internal.http2.Http2Connection: java.util.Map streams
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactMarker
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
com.horcrux.svg.SvgViewManager: void onDropViewInstance(android.view.View)
okhttp3.Cookie: java.lang.String toString()
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.facebook.react.fabric.CoreComponentsRegistry
okhttp3.internal.huc.OkHttpsURLConnection: void setDoOutput(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
okhttp3.internal.huc.OutputStreamRequestBody$1: okhttp3.internal.huc.OutputStreamRequestBody this$0
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
okhttp3.Dns$1: Dns$1()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
okhttp3.Dns: java.util.List lookup(java.lang.String)
okhttp3.internal.http.HttpHeaders: void parseChallengeHeader(java.util.List,okio.Buffer)
okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
okhttp3.EventListener: void callEnd(okhttp3.Call)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier access$100(com.facebook.react.modules.storage.AsyncStorageModule)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
com.facebook.react.views.text.ReactTextView
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.facebook.yoga.YogaNode: YogaNode()
okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
okhttp3.CacheControl: boolean isPrivate
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromObject
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
okhttp3.WebSocket: void cancel()
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
com.facebook.react.modules.toast.ToastModule
okhttp3.OkHttpClient: int readTimeout
okhttp3.Cache: int writeSuccessCount()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
okio.Timeout: long deadlineNanoTime
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.horcrux.svg.SvgViewManager: void onDropViewInstance(com.facebook.react.views.view.ReactViewGroup)
okhttp3.internal.http2.Http2Connection$Builder
com.horcrux.svg.LinearGradientView: void setY2(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: NativeAsyncSQLiteDBStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Connection: void close()
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
okhttp3.internal.http2.Http2Connection$PingRunnable
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.cache2.Relay: int SOURCE_UPSTREAM
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.Request: java.lang.String header(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.facebook.react.bridge.JavaScriptExecutorFactory
okhttp3.internal.http.HttpHeaders: boolean skipWhitespaceAndCommas(okio.Buffer)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_FOCUS
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.horcrux.svg.LinearGradientView
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
okhttp3.HttpUrl: int pathSize()
okhttp3.internal.http2.Http2: byte TYPE_CONTINUATION
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
okhttp3.ConnectionPool: java.util.concurrent.Executor executor
okhttp3.MultipartBody: okhttp3.MediaType originalType
okhttp3.internal.http2.Http2Connection$Listener$1: Http2Connection$Listener$1()
okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
androidx.appcompat.widget.SearchView: int getImeOptions()
okhttp3.Cache: int writeSuccessCount
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getVideoIntent()
com.facebook.react.modules.deviceinfo.DeviceInfoModule
com.facebook.react.bridge.Dynamic: void recycle()
okhttp3.internal.huc.OkHttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.internal.http1.Http1Codec$1
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_LOAD_URL
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String NAME
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
okhttp3.Cookie$Builder: boolean hostOnly
okhttp3.internal.http2.Http2Reader: void close()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDeltaY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
com.facebook.react.fabric.events.EventBeatManager
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFont(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
javax.inject.Provider
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ScheduledExecutorService writerExecutor
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
okhttp3.internal.tls.DistinguishedNameParser: int getByte(int)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
okhttp3.internal.Util$2
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
okhttp3.CipherSuite: CipherSuite(java.lang.String)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor(okhttp3.OkHttpClient)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
com.facebook.react.fabric.Binding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
okhttp3.Cache
okhttp3.internal.connection.StreamAllocation: okhttp3.ConnectionPool connectionPool
okhttp3.internal.http2.Http2Connection: boolean isHealthy(long)
okhttp3.internal.JavaNetHeaders$1: JavaNetHeaders$1()
okhttp3.internal.http2.Http2Connection: long intervalPongsReceived
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String getName()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
androidx.appcompat.widget.SearchView: void setInputType(int)
okhttp3.internal.huc.OkHttpURLConnection: long fixedContentLength
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMethod(com.horcrux.svg.TextView,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
okhttp3.Headers$Builder: okhttp3.Headers build()
okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
com.facebook.react.modules.storage.AsyncStorageModule: void initialize()
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
okhttp3.HttpUrl: java.lang.String host
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
okhttp3.internal.http2.Http2Codec: okhttp3.internal.http2.Http2Connection connection
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.horcrux.svg.TextPathView: void setSharp(java.lang.String)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$100(com.facebook.react.devsupport.LogBoxModule)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
okhttp3.RequestBody$3: void writeTo(okio.BufferedSink)
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: Http2Codec$StreamFinishingSource(okhttp3.internal.http2.Http2Codec,okio.Source)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
okhttp3.CacheControl$Builder: boolean noCache
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager
okhttp3.internal.http1.Http1Codec: void finishRequest()
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl$Builder: void pop()
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MINDATE
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.Class serverProviderClass
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.facebook.react.views.picker.ReactPickerManager: void setSelected(com.facebook.react.views.picker.ReactPicker,int)
okhttp3.internal.http1.Http1Codec$FixedLengthSource: okhttp3.internal.http1.Http1Codec this$0
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
okhttp3.OkHttpClient$1: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
okhttp3.internal.http2.Http2Connection$1: okhttp3.internal.http2.Http2Connection this$0
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod valueOf(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.facebook.react.modules.storage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http.HttpHeaders: HttpHeaders()
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setBlurOnSubmit(java.lang.Boolean)
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager: void setMask(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.module.model.ReactModuleInfo
okhttp3.internal.huc.DelegatingHttpsURLConnection: DelegatingHttpsURLConnection(java.net.HttpURLConnection)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
okhttp3.Call: void cancel()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
okhttp3.Cookie$Builder: boolean secure
okhttp3.internal.cache.DiskLruCache$Editor$1: DiskLruCache$Editor$1(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink)
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(java.net.URL,okhttp3.OkHttpClient,okhttp3.internal.URLFilter)
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
okhttp3.HttpUrl
okhttp3.internal.ws.RealWebSocket: long CANCEL_AFTER_CLOSE_MILLIS
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec
okhttp3.internal.connection.RealConnection: boolean isEligible(okhttp3.Address,okhttp3.Route)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(okhttp3.internal.huc.OkHttpURLConnection)
okhttp3.internal.http2.Http2Connection$1: okhttp3.internal.http2.ErrorCode val$errorCode
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(com.horcrux.svg.ImageView,int)
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
okhttp3.OkHttpClient$1: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
okhttp3.internal.huc.OkHttpsURLConnection: void setRequestMethod(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.facebook.common.time.RealtimeSinceBootClock
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
okhttp3.CacheControl$Builder: int maxAgeSeconds
com.horcrux.svg.RenderableViewManager$DefsViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.Cache$CacheRequestImpl: okhttp3.internal.cache.DiskLruCache$Editor editor
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Connection$PingRunnable: boolean reply
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
okhttp3.RealCall: okhttp3.internal.http.RetryAndFollowUpInterceptor retryAndFollowUpInterceptor
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: AndroidPlatform$AndroidTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
okhttp3.Address: java.util.List connectionSpecs()
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
okhttp3.internal.http1.Http1Codec$ChunkedSink: Http1Codec$ChunkedSink(okhttp3.internal.http1.Http1Codec)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.jni.CppSystemErrorException
okhttp3.internal.http2.Http2Reader$ContinuationSource
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration)
com.horcrux.svg.RenderableViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.DiskLruCache: int appVersion
okhttp3.CacheControl: int maxStaleSeconds
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.horcrux.svg.RenderableViewManager: void setResponsible(com.horcrux.svg.VirtualView,boolean)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
okhttp3.internal.http2.Http2Connection$7: void execute()
okio.AsyncTimeout: int TIMEOUT_WRITE_SIZE
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_BYTE_MAX
okhttp3.internal.http2.Http2Connection: long access$200(okhttp3.internal.http2.Http2Connection)
okio.AsyncTimeout: okio.Source source(okio.Source)
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
okhttp3.internal.connection.StreamAllocation
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.facebook.react.bridge.JSIModuleType
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
okhttp3.internal.http2.Http2Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
okhttp3.internal.ws.RealWebSocket$1: void run()
com.horcrux.svg.MaskView: void setMaskContentUnits(int)
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.util.List protocols
okhttp3.internal.http.RealInterceptorChain
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.datepicker.DatePickerDialogModule)
okhttp3.internal.ws.RealWebSocket: void tearDown()
okhttp3.OkHttpClient: java.util.List interceptors()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setOpacity(android.view.View,float)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.horcrux.svg.MaskView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
okhttp3.Cache: boolean isClosed()
com.facebook.react.modules.debug.AnimationsDebugModule: void onCatalystInstanceDestroy()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.horcrux.svg.CircleView: void setCy(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
com.horcrux.svg.RenderableViewManager$CircleViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
com.facebook.react.bridge.ReactSoftException: java.util.List sListeners
okhttp3.internal.platform.OptionalMethod
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.facebook.react.bridge.JavaMethodWrapper
okhttp3.RealCall$AsyncCall: okhttp3.RealCall this$0
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String toString()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.ws.RealWebSocket: java.lang.Runnable writerRunnable
okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.horcrux.svg.VirtualView: void setMask(java.lang.String)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setWebChromeClient(android.webkit.WebChromeClient)
com.horcrux.svg.RenderableViewManager$TSpanViewManager
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
okhttp3.internal.http.HttpCodec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
com.facebook.react.views.slider.ReactSlider: void setStep(double)
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
okhttp3.internal.connection.StreamAllocation: java.lang.String toString()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
okhttp3.internal.http2.Http2Stream$FramingSource
okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
okhttp3.internal.http2.Hpack$Reader: int headerCount
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.ws.RealWebSocket$PingRunnable: RealWebSocket$PingRunnable(okhttp3.internal.ws.RealWebSocket)
okhttp3.CacheControl$Builder: boolean noStore
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebViewClient getRNCWebViewClient()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSharp(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: int MAX_SQL_KEYS
com.horcrux.svg.SvgViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.facebook.react.uimanager.events.RCTEventEmitter
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
okhttp3.internal.cache.DiskLruCache: java.io.File directory
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
com.facebook.react.modules.storage.AsyncStorageModule: boolean ensureDatabase()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
okhttp3.internal.huc.OkHttpsURLConnection: long getDate()
okhttp3.internal.http2.Http2Reader$Handler: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
okhttp3.internal.http.RealInterceptorChain: int readTimeout
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
okhttp3.internal.http.RealResponseBody: long contentLength
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.ResponseBody: okhttp3.MediaType contentType()
okhttp3.Cache: long size()
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,byte,byte)
okhttp3.WebSocketListener: WebSocketListener()
com.facebook.react.ReactRootView: int getUIManagerType()
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig()
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
okhttp3.Cookie: boolean domainMatch(java.lang.String,java.lang.String)
okhttp3.internal.http1.Http1Codec: okio.Source newFixedLengthSource(long)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
com.horcrux.svg.TextView: void setLengthAdjust(java.lang.String)
okhttp3.Response: okhttp3.Protocol protocol()
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.horcrux.svg.RenderableViewManager: void setStrokeMiterlimit(com.horcrux.svg.RenderableView,float)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
okhttp3.CipherSuite: java.lang.String javaName
com.horcrux.svg.RenderableView: void setStrokeMiterlimit(float)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.facebook.jni.IteratorHelper
okhttp3.internal.http.HttpCodec
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
okhttp3.OkHttpClient$1: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.Request$Builder: okhttp3.HttpUrl url
com.facebook.react.bridge.BackgroundExecutor
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
com.horcrux.svg.RenderableViewManager: void setFillOpacity(com.horcrux.svg.RenderableView,float)
com.horcrux.svg.RadialGradientView: void setFy(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Connection$2: int val$streamId
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
okhttp3.Response$Builder: okhttp3.Response networkResponse
com.horcrux.svg.GroupView: void setFont(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.scroll.ReactScrollViewManager
com.facebook.react.bridge.NativeModule
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.reactnativecommunity.webview.RNCWebViewModule: void setDownloadRequest(android.app.DownloadManager$Request)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.horcrux.svg.CircleView: void setCx(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Writer: void headers(int,java.util.List)
okhttp3.internal.http2.Http2Codec: java.lang.String CONNECTION
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
okhttp3.Headers: java.lang.String name(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.horcrux.svg.SymbolView: void setMinX(float)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor[] values()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
androidx.appcompat.widget.AppCompatButton
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
okhttp3.internal.http2.Http2Codec: java.lang.String ENCODING
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.horcrux.svg.RectView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
okhttp3.Cookie: long expiresAt()
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void clear(com.facebook.react.bridge.Callback)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.Object getContent(java.lang.Class[])
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
okhttp3.Response: java.util.List headers(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.horcrux.svg.RenderableView: void setFillRule(int)
okhttp3.Cache$1: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
com.facebook.react.devsupport.HMRClient
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getName()
okhttp3.internal.huc.OkHttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.horcrux.svg.SvgView: android.graphics.RectF getViewBox()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()
com.horcrux.svg.RenderableViewManager: java.lang.String mClassName
okhttp3.internal.http2.Http2Connection$4
com.horcrux.svg.MaskView: void setX(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Connection$2: Http2Connection$2(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long)
com.reactnativecommunity.webview.RNCWebViewModule$MimeType: com.reactnativecommunity.webview.RNCWebViewModule$MimeType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.horcrux.svg.RadialGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor valueOf(java.lang.String)
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference
com.facebook.fbreact.specs.NativeJSDevSupportSpec
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
com.horcrux.svg.RectView
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
okhttp3.internal.http1.Http1Codec$AbstractSource: okhttp3.internal.http1.Http1Codec this$0
okhttp3.internal.http2.ConnectionShutdownException
com.facebook.react.bridge.ReactBridge: void staticInit()
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.facebook.react.uimanager.UIManagerModule: void initialize()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.cache.DiskLruCache$Editor: void abortUnlessCommitted()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.picker.ReactPicker: com.facebook.react.views.picker.ReactPicker$OnSelectListener getOnSelectListener()
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.webkit.WebView)
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okio.ForwardingTimeout timeout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
com.facebook.react.modules.storage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
okhttp3.internal.http2.Http2Reader: int readMedium(okio.BufferedSource)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
okhttp3.internal.huc.OkHttpURLConnection: java.io.InputStream getErrorStream()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers responseHeaders
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.JSIModule
okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
okhttp3.internal.ws.WebSocketWriter: boolean isClient
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getConnectTimeout()
okhttp3.internal.cache.CacheInterceptor$1: okio.Timeout timeout()
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.bridge.ReactSoftException: void logSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman get()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
okhttp3.internal.huc.BufferedRequestBody: long contentLength()
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_CLIENT_GOING_AWAY
okhttp3.internal.ws.RealWebSocket$PingRunnable: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: Http2Connection$ReaderRunnable$1(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
okhttp3.RequestBody: long contentLength()
okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
okhttp3.internal.http2.Http2Connection$2: void execute()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot next()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform PLATFORM
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
okhttp3.Address: java.lang.String toString()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.bridge.OnBatchCompleteListener
com.facebook.jni.HybridData$Destructor: long mNativePointer
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
okhttp3.internal.Util: okio.ByteString UTF_32_BE_BOM
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
okhttp3.internal.ws.RealWebSocket: void cancel()
okhttp3.internal.http.CallServerInterceptor
com.horcrux.svg.RenderableViewManager$RadialGradientManager: RenderableViewManager$RadialGradientManager()
okhttp3.OkHttpClient$Builder: int connectTimeout
com.facebook.react.devsupport.LogBoxModule
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.internal.URLFilter urlFilter
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
okhttp3.HttpUrl: boolean equals(java.lang.Object)
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.yoga.YogaNodeJNIBase
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
com.facebook.react.animated.NativeAnimatedModule
okhttp3.internal.ws.RealWebSocket$1: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.Handshake
okhttp3.internal.http2.Hpack
okhttp3.internal.http1.Http1Codec$FixedLengthSource: long read(okio.Buffer,long)
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
okhttp3.Cache$Entry
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
com.facebook.react.bridge.queue.ReactQueueConfiguration
okhttp3.internal.platform.JdkWithJettyBootPlatform: okhttp3.internal.platform.Platform buildIfSupported()
okhttp3.CipherSuite$1: int compare(java.lang.String,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$100(com.facebook.react.modules.image.ImageLoaderModule)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.WritableArray: void pushNull()
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths(okio.BufferedSink)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine get(okhttp3.Response)
okhttp3.internal.http2.Http2Reader$Handler: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
okhttp3.Cookie: boolean equals(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.facebook.jni.HybridData: boolean isValid()
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
okhttp3.internal.http2.ErrorCode
okhttp3.Response$Builder: okhttp3.ResponseBody body
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(com.facebook.react.views.slider.ReactSlider,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
okio.AsyncTimeout: boolean inQueue
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
okhttp3.HttpUrl: java.util.List queryNamesAndValues
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
okhttp3.internal.cache2.Relay: void commit(long)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.http2.Huffman: int[] CODES
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState valueOf(java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Principal getLocalPrincipal()
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount()
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_FIN
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.facebook.jni.HybridData$Destructor: void destruct()
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ACTION_DISMISSED
com.horcrux.svg.SvgViewModule: java.lang.String getName()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$100(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.picker.ReactPicker: void setImmediateSelection(int)
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue mOperations
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
okhttp3.internal.platform.AndroidPlatform: int getSdkInt()
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
com.facebook.react.bridge.Promise
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
okhttp3.Cache$CacheRequestImpl: okio.Sink body
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_STOP_LOADING
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.yoga.YogaNative
okhttp3.internal.io.FileSystem
com.facebook.jni.DestructorThread$Destructor
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.devsupport.JSCHeapCapture
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void write(okio.Buffer,long)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.Internal: boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException)
okhttp3.RealCall$1: void timedOut()
okhttp3.internal.huc.OkHttpURLConnection: boolean connectPending
okhttp3.internal.http2.Http2Connection$1: int val$streamId
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType[] values()
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay read(java.io.File)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
okhttp3.MediaType: java.lang.String subtype
okhttp3.internal.ws.RealWebSocket$CancelRunnable: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.internal.Util: java.lang.String[] EMPTY_STRING_ARRAY
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)
com.horcrux.svg.VirtualView: double getFontSizeFromContext()
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner
com.horcrux.svg.PatternView: void setVbHeight(float)
okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
com.facebook.react.modules.appstate.AppStateModule
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
androidx.lifecycle.ReflectiveGenericLifecycleObserver
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.horcrux.svg.ImageView: void setY(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.JSDevSupport: java.lang.String MODULE_NAME
okhttp3.internal.cache2.Relay: void writeMetadata(long)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
okhttp3.OkHttpClient$Builder
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response response
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
okhttp3.internal.tls.BasicCertificateChainCleaner: int MAX_SIGNERS
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.facebook.react.modules.intent.IntentModule: java.lang.String getName()
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: okhttp3.internal.http2.Http2Codec this$0
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
okhttp3.OkUrlFactory: java.lang.Object clone()
okhttp3.CacheControl: boolean noTransform()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor executor
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.facebook.react.modules.toast.ToastModule: java.lang.String getName()
okhttp3.JavaNetAuthenticator: java.net.InetAddress getConnectToInetAddress(java.net.Proxy,okhttp3.HttpUrl)
okhttp3.internal.http.HttpDate: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager
okhttp3.RealCall: java.io.IOException timeoutExit(java.io.IOException)
com.facebook.react.views.text.ReactRawTextShadowNode
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection,boolean)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
okhttp3.internal.cache.DiskLruCache$2: DiskLruCache$2(okhttp3.internal.cache.DiskLruCache,okio.Sink)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
okhttp3.internal.platform.OptionalMethod: java.lang.String methodName
com.horcrux.svg.TextView: void setDeltaY(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaScriptModule
okhttp3.internal.http2.Settings: int COUNT
okhttp3.RequestBody$3: RequestBody$3(okhttp3.MediaType,java.io.File)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.facebook.drawee.view.DraweeView
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.horcrux.svg.VirtualView: float getCanvasHeight()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.RealCall: okhttp3.Request request()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setBackgroundColor(android.view.View,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
okhttp3.internal.http2.Http2Connection: int openStreamCount()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderFieldKey(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.horcrux.svg.VirtualView: void setResponsible(boolean)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.OkHttpClient: int callTimeoutMillis()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ModuleSpec
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
okhttp3.OkHttpClient: boolean followRedirects()
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.RealCall: void captureCallStackTrace()
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
okhttp3.internal.huc.DelegatingHttpsURLConnection: okhttp3.Handshake handshake()
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
okhttp3.Headers$Builder: Headers$Builder()
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
okhttp3.Call: okhttp3.Call clone()
com.facebook.react.views.picker.ReactPicker: void setStagedItems(java.util.List)
com.facebook.react.views.picker.ReactDropdownPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Http2Codec: void writeRequestHeaders(okhttp3.Request)
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.ConnectionSpecSelector
com.horcrux.svg.CircleView
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
com.horcrux.svg.MaskView: void setMaskUnits(int)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
okhttp3.internal.cache.DiskLruCache: boolean $assertionsDisabled
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()
okhttp3.Route: java.net.Proxy proxy()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
okhttp3.CacheControl: boolean noCache()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDoInput(boolean)
okhttp3.internal.connection.StreamAllocation: StreamAllocation(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
okhttp3.OkUrlFactory: OkUrlFactory(okhttp3.OkHttpClient)
okhttp3.internal.http2.Http2Stream: int getId()
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.network.NetworkingModule
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
okhttp3.internal.http.HttpCodec: void writeRequestHeaders(okhttp3.Request)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
okhttp3.internal.cache.FaultHidingSink
okhttp3.Connection: okhttp3.Handshake handshake()
com.horcrux.svg.RenderableViewManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.cache.DiskLruCache: java.util.concurrent.Executor executor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.horcrux.svg.VirtualView)
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http.HttpHeaders: java.lang.String repeat(char,int)
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Headers)
okhttp3.MediaType
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
okhttp3.internal.ws.WebSocketWriter$FrameSink
okhttp3.internal.http2.Header: int hashCode()
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updatePaddingMountItem(int,int,int,int,int)
okhttp3.Handshake: java.security.Principal localPrincipal()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
okhttp3.internal.cache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])
com.horcrux.svg.TextPathView: void setHref(java.lang.String)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
okio.AsyncTimeout: long timeoutAt
com.facebook.react.views.picker.ReactDropdownPickerManager: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
okhttp3.internal.http2.Http2: byte FLAG_NONE
okhttp3.MultipartBody: okio.ByteString boundary
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.huc.OkHttpsURLConnection: boolean getUseCaches()
okhttp3.Cache$1
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.views.slider.ReactSliderManager: java.lang.String getName()
com.facebook.jni.DestructorThread$Terminus
com.facebook.react.bridge.ObjectAlreadyConsumedException
okhttp3.internal.http2.Http2Codec
com.facebook.react.views.picker.ReactPickerManager: void setEnabled(com.facebook.react.views.picker.ReactPicker,boolean)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: void onHostPause()
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.horcrux.svg.LinearGradientView: void setX1(com.facebook.react.bridge.Dynamic)
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0
okhttp3.internal.http2.Http2Connection: void failConnection()
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.horcrux.svg.TextView: void setDeltaX(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.JavaOnlyArray: int size()
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService listenerExecutor
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
com.horcrux.svg.TextView
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.facebook.react.modules.storage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getMimeTypeFromExtension(java.lang.String)
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
okhttp3.internal.huc.OkHttpsURLConnection: java.security.cert.Certificate[] getLocalCertificates()
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
okhttp3.Call: okio.Timeout timeout()
okhttp3.internal.http2.Http2Connection$1: Http2Connection$1(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.Internal: void initializeInstanceForTests()
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
okhttp3.internal.cache2.FileOperator: FileOperator(java.nio.channels.FileChannel)
okhttp3.internal.http2.Http2Reader: int lengthWithoutPadding(int,byte,short)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setHasScrollEvent(boolean)
okhttp3.internal.http1.Http1Codec$ChunkedSource: okhttp3.internal.http1.Http1Codec this$0
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures[] values()
okhttp3.internal.connection.RealConnection: int allocationLimit
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.facebook.react.devsupport.LogBoxModule: android.view.View access$000(com.facebook.react.devsupport.LogBoxModule)
androidx.lifecycle.CompositeGeneratedAdaptersObserver
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$CloseGuard closeGuard
androidx.appcompat.widget.Toolbar: int getPopupTheme()
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.horcrux.svg.RenderableViewManager$UseViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.ws.WebSocketReader: long frameLength
androidx.lifecycle.SingleGeneratedAdapterObserver
okhttp3.internal.http2.Http2Connection: void writeSynReply(int,boolean,java.util.List)
com.facebook.react.bridge.JSBundleLoaderDelegate
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getReadTimeout()
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.facebook.react.devsupport.LogBoxModule: java.lang.String getName()
com.facebook.soloader.SysUtil$LollipopSysdeps
okhttp3.ResponseBody: java.io.InputStream byteStream()
okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
okhttp3.internal.http2.Http2: byte TYPE_DATA
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.modules.fresco.FrescoModule
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener access$100()
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
okhttp3.RequestBody$1: void writeTo(okio.BufferedSink)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.reactnativecommunity.webview.RNCWebViewFileProvider: RNCWebViewFileProvider()
okhttp3.internal.cache2.Relay: long bufferMaxSize
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
okhttp3.internal.http1.Http1Codec$AbstractSource: Http1Codec$AbstractSource(okhttp3.internal.http1.Http1Codec)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.horcrux.svg.PathView: void setD(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
okhttp3.internal.connection.RouteSelector$Selection
okhttp3.Cache$CacheRequestImpl: okio.Sink body()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
okhttp3.Dispatcher: java.util.List queuedCalls()
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_VIEW_NOT_FOUND
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor networkInterceptor
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.util.RCTLog
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
okhttp3.internal.http.HttpHeaders: int skipWhitespace(java.lang.String,int)
okhttp3.internal.cache.DiskLruCache: java.lang.String DIRTY
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
okhttp3.ConnectionSpec: ConnectionSpec(okhttp3.ConnectionSpec$Builder)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
okhttp3.internal.ws.RealWebSocket
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
okhttp3.internal.http1.Http1Codec: int STATE_CLOSED
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDeltaX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(android.view.View,boolean)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.facebook.react.animated.NativeAnimatedModule: void initialize()
okhttp3.OkUrlFactory$1: okhttp3.OkUrlFactory this$0
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.WritableNativeArray)
okhttp3.internal.proxy.NullProxySelector
okhttp3.Response: okhttp3.Response priorResponse()
okhttp3.internal.huc.OkHttpURLConnection: int getConnectTimeout()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
okhttp3.Response: java.util.List challenges()
okhttp3.internal.http2.Http2Connection$2
okhttp3.Interceptor
okhttp3.internal.http.RealResponseBody
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
com.facebook.react.bridge.ReadableArray
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.DynamicFromMap
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
okhttp3.OkHttpClient$Builder: int pingInterval
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setIfModifiedSince(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
okhttp3.internal.huc.OkHttpURLConnection: void setReadTimeout(int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.CacheControl: int minFreshSeconds
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
okhttp3.internal.http2.Settings: boolean getEnablePush(boolean)
okhttp3.Cache: int hitCount()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.horcrux.svg.RenderableViewManager$LineViewManager: RenderableViewManager$LineViewManager()
okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
okhttp3.internal.http1.Http1Codec: int STATE_READ_RESPONSE_HEADERS
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
okhttp3.internal.NamedRunnable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
okhttp3.HttpUrl: int querySize()
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: void close()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
okhttp3.RequestBody: RequestBody()
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
okhttp3.FormBody: long contentLength()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_BINARY
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.Cookie$Builder: long expiresAt
okhttp3.internal.huc.StreamedRequestBody: void writeTo(okio.BufferedSink)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.OkHttpClient: int writeTimeoutMillis()
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
okhttp3.Response$Builder: okhttp3.Response priorResponse
okhttp3.internal.huc.OkHttpURLConnection: OkHttpURLConnection(java.net.URL,okhttp3.OkHttpClient,okhttp3.internal.URLFilter)
com.facebook.react.bridge.ReadableNativeArray$1
okhttp3.internal.cache.DiskLruCache$3: DiskLruCache$3(okhttp3.internal.cache.DiskLruCache)
okhttp3.OkHttpClient$1: boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException)
okhttp3.TlsVersion: java.lang.String javaName
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
okhttp3.Response: okhttp3.Response cacheResponse()
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService pushExecutor
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String getName()
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] dirtyFiles
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.CertificatePinner: java.util.Set pins
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
com.horcrux.svg.RenderableViewManager$SymbolManager
okhttp3.internal.http2.PushObserver$1: boolean onHeaders(int,java.util.List,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.horcrux.svg.SvgView: void setToDataUrlTask(java.lang.Runnable)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager
okhttp3.ResponseBody: java.nio.charset.Charset charset()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(com.horcrux.svg.RadialGradientView,int)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CallbackImpl: int mCallbackId
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
com.reactnativecommunity.webview.RNCWebViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setOpacity(android.view.View,float)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
okhttp3.JavaNetAuthenticator
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
com.reactnativecommunity.webview.RNCWebViewManager: void setApplicationNameForUserAgent(android.webkit.WebView,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.cache.InternalCache: void update(okhttp3.Response,okhttp3.Response)
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
okhttp3.internal.http1.Http1Codec: Http1Codec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
okhttp3.CacheControl$Builder: boolean onlyIfCached
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.VirtualView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.OkUrlFactory$1: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)
okhttp3.Connection: okhttp3.Route route()
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.facebook.react.bridge.NativeArray
okhttp3.internal.platform.JdkWithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
okhttp3.OkHttpClient$Builder: int callTimeout
okhttp3.internal.http2.Http2Connection: int AWAIT_PING
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform(java.lang.reflect.Method,java.lang.reflect.Method)
okhttp3.Response: long sentRequestAtMillis()
okhttp3.Cache$2: java.lang.String nextUrl
okhttp3.MediaType: java.lang.String type
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.appcompat.widget.LinearLayoutCompat
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1
okhttp3.internal.http1.Http1Codec: okio.Source newChunkedSource(okhttp3.HttpUrl)
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
com.facebook.react.bridge.UIManagerListener
okhttp3.internal.http1.Http1Codec$ChunkedSource: long bytesRemainingInChunk
com.horcrux.svg.RenderableViewManager: void access$100(com.horcrux.svg.RenderableViewManager,com.horcrux.svg.VirtualView)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(int,int,okio.Source)
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
okhttp3.internal.ws.RealWebSocket: boolean pong(okio.ByteString)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
com.facebook.react.modules.dialog.DialogModule: java.lang.String getName()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setMessagingEnabled(boolean)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setSelection(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
okhttp3.Cookie: int dateCharacterOffset(java.lang.String,int,int,boolean)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Connection$PingRunnable: int payload2
okhttp3.internal.cache.CacheInterceptor
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setFixedLengthStreamingMode(long)
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.reactnativecommunity.webview.RNCWebViewManager: void setOnScroll(android.webkit.WebView,boolean)
com.facebook.react.modules.storage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
okhttp3.internal.ws.WebSocketWriter: okio.Sink newMessageSink(int,long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
okio.ForwardingSink: void write(okio.Buffer,long)
okhttp3.internal.http2.Hpack$Writer: int SETTINGS_HEADER_TABLE_SIZE_LIMIT
okhttp3.ResponseBody: java.io.Reader charStream()
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
okhttp3.internal.http2.Huffman: byte[] decode(byte[])
okhttp3.Cache$Entry: okhttp3.Protocol protocol
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
okhttp3.internal.cache.CacheStrategy
okhttp3.RealCall: java.lang.String toLoggableString()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation()
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
okhttp3.internal.tls.DistinguishedNameParser: char[] chars
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.facebook.react.views.modal.ModalHostShadowNode
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
com.horcrux.svg.LinearGradientView: void setX2(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSThreadDestructionComplete
okhttp3.internal.huc.OkHttpsURLConnection
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.image.ReactImageView
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setUrlPrefixesForDefaultIntent(android.webkit.WebView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
okio.Timeout: void waitUntilNotified(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
okhttp3.internal.Util
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
okhttp3.CacheControl: boolean isPublic()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_CACHE
com.facebook.react.bridge.Arguments$2
okhttp3.internal.cache.DiskLruCache: boolean closed
okhttp3.CertificatePinner$Pin
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
com.facebook.react.bridge.Arguments$1
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
okhttp3.internal.Util$2: java.lang.String val$name
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.facebook.react.bridge.JavaMethodWrapper$3
okhttp3.Cache$CacheRequestImpl$1: okhttp3.Cache$CacheRequestImpl this$1
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(com.horcrux.svg.ImageView,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Connection$6: void execute()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.util.Date)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
okhttp3.Cache$1: void remove(okhttp3.Request)
com.horcrux.svg.SymbolView: void setVbHeight(float)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.facebook.react.views.text.ReactRawTextManager
okhttp3.internal.ws.RealWebSocket: boolean $assertionsDisabled
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okio.Timeout timeout()
com.facebook.react.bridge.JavaOnlyArray
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.util.Date)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.Handshake: java.util.List peerCertificates()
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.DiskLruCache: void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
okhttp3.Cache$2: Cache$2(okhttp3.Cache)
okhttp3.internal.huc.OkHttpsURLConnection: int getHeaderFieldInt(java.lang.String,int)
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Principal getPeerPrincipal()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
com.horcrux.svg.RenderableViewManager$PathViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_SHORT_MAX
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.devsupport.JSDevSupport: void computeDeepestJSHierarchy(android.view.View,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getContentLength()
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl$2
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
okhttp3.internal.http2.Http2Connection: void start(boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.huc.OutputStreamRequestBody$1
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
com.horcrux.svg.UseView
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
okhttp3.internal.http1.Http1Codec: int STATE_OPEN_REQUEST_BODY
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
okhttp3.OkHttpClient
okhttp3.Dispatcher: int runningCallsCount()
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
com.reactnativecommunity.webview.RNCWebViewManager: void setSaveFormDataDisabled(android.webkit.WebView,boolean)
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$200(com.facebook.react.animated.NativeAnimatedModule)
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
okhttp3.HttpUrl: java.util.Set queryParameterNames()
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
okhttp3.internal.cache.DiskLruCache: java.lang.String REMOVE
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog access$200(com.facebook.react.devsupport.LogBoxModule)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
okhttp3.Request: java.util.List headers(java.lang.String)
okhttp3.HttpUrl: java.lang.String USERNAME_ENCODE_SET
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,int)
okhttp3.internal.platform.ConscryptPlatform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
com.horcrux.svg.LineView: void setY2(com.facebook.react.bridge.Dynamic)
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
okhttp3.ConnectionSpec: java.lang.String toString()
okhttp3.internal.ws.RealWebSocket: boolean failed
com.facebook.react.bridge.JavaJSExecutor$Factory
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Settings: int MAX_FRAME_SIZE
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.InputStream getErrorStream()
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.facebook.jni.NativeRunnable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getPostAnimationScrollX()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
okhttp3.HttpUrl: java.lang.String FORM_ENCODE_SET
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
com.horcrux.svg.VirtualView: void setClientRect(android.graphics.RectF)
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
okhttp3.internal.http.StatusLine: java.lang.String message
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String getName()
okhttp3.Address: okhttp3.Dns dns
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing[] values()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
okhttp3.internal.http2.Http2Connection$4: int val$streamId
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.WritableNativeMap)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteSelector routeSelector
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
okhttp3.Cache$Entry: int code
okhttp3.Cache: Cache(java.io.File,long)
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
okhttp3.internal.cache.CacheInterceptor$1: long read(okio.Buffer,long)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Request: okhttp3.Headers headers()
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
okhttp3.RequestBody$3: java.io.File val$file
okhttp3.Cache$CacheRequestImpl
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Connection: void pushRequestLater(int,java.util.List)
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
com.facebook.react.devsupport.JSDevSupport: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.horcrux.svg.RadialGradientView: void setGradientUnits(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
okhttp3.internal.platform.AndroidPlatform: boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object)
com.horcrux.svg.TextView: void setInlineSize(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager: double EPSILON
okhttp3.Response: java.lang.String header(java.lang.String)
okhttp3.internal.connection.RealConnection$1: RealConnection$1(okhttp3.internal.connection.RealConnection,boolean,okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.StreamAllocation)
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,okio.Source[],long[])
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
okhttp3.internal.http2.Http2Stream: void waitForIo()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.react.bridge.GuardedRunnable
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl$1
okhttp3.internal.ws.RealWebSocket: void writePingFrame()
okhttp3.OkHttpClient: okhttp3.Dns dns()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Challenge: java.lang.String toString()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
okhttp3.internal.http2.Hpack$Reader
okhttp3.internal.platform.Android10Platform: okhttp3.internal.platform.Platform buildIfSupported()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_NO_STATUS_CODE
okhttp3.CacheControl: boolean immutable
okhttp3.ConnectionPool$1: okhttp3.ConnectionPool this$0
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(android.content.Context)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
okhttp3.JavaNetCookieJar: java.net.CookieHandler cookieHandler
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
okhttp3.internal.huc.StreamedRequestBody: okio.Pipe pipe
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
com.facebook.fbreact.specs.NativeJSDevSupportSpec: NativeJSDevSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.huc.OutputStreamRequestBody: java.io.OutputStream outputStream
okhttp3.internal.http2.Settings: int set
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
okio.AsyncTimeout: long remainingNanos(long)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getCommandsMap()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.horcrux.svg.RectView: void setX(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http.CallServerInterceptor$CountingSink: long successfulCount
okhttp3.internal.platform.Platform: int INFO
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
okhttp3.OkHttpClient: boolean followSslRedirects
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
okhttp3.Response$Builder: long receivedResponseAtMillis
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_CLOSE
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.facebook.react.bridge.JavaOnlyMap$2
okhttp3.Cache: void trackConditionalCacheHit()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
com.facebook.react.uimanager.ViewManager: ViewManager()
okhttp3.OkUrlFactory$1: int getDefaultPort()
okhttp3.internal.http.HttpCodec: okio.Sink createRequestBody(okhttp3.Request,long)
okhttp3.internal.huc.OkHttpURLConnection: int getResponseCode()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
okhttp3.internal.http2.Http2Stream: java.util.Deque access$000(okhttp3.internal.http2.Http2Stream)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.net.URL getURL()
okhttp3.Cache$2: java.util.Iterator delegate
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
okhttp3.internal.http2.Settings: int getInitialWindowSize()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem insertMountItem(int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_CLEAN
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
okhttp3.Cookie: java.lang.String path()
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
okhttp3.Headers: java.lang.String toString()
com.facebook.react.views.unimplementedview.ReactUnimplementedView
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Headers)
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
okhttp3.internal.cache.DiskLruCache: int valueCount
okhttp3.internal.platform.Jdk9Platform
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
com.facebook.react.bridge.queue.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReadableNativeArray: int size()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ScheduledExecutorService access$500(okhttp3.internal.http2.Http2Connection)
okhttp3.Handshake: java.util.List localCertificates()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte EXCEPTION_MARKER
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState[] values()
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDefaultUseCaches()
com.horcrux.svg.RenderableViewManager$DefsViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String getName()
androidx.appcompat.widget.ActivityChooserView$InnerLayout
okhttp3.internal.connection.RealConnection: okhttp3.ConnectionPool connectionPool
okhttp3.Address: int hashCode()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
okhttp3.HttpUrl$Builder: int effectivePort()
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.datepicker.DatePickerDialogModule)
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String escapedAV()
okhttp3.internal.Util: java.util.Comparator NATURAL_ORDER
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
okhttp3.ResponseBody$BomAwareReader: java.io.Reader delegate
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String nextAT()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
okhttp3.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.RealCall,okhttp3.Callback)
okhttp3.Cache$CacheRequestImpl$1: okhttp3.Cache val$this$0
okhttp3.RequestBody: okhttp3.MediaType contentType()
okhttp3.internal.platform.AndroidPlatform$CloseGuard: boolean warnIfOpen(java.lang.Object)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
com.facebook.react.uimanager.UIManagerModule: void preComputeConstantsForViewManager(java.util.List)
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
okhttp3.internal.huc.OkHttpsURLConnection: int getReadTimeout()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.CxxCallbackImpl
okhttp3.OkHttpClient: java.net.Proxy proxy
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
okhttp3.CertificatePinner$Builder: java.util.List pins
okhttp3.Response$Builder: okhttp3.Response build()
com.reactnativecommunity.webview.RNCWebViewManager: void setSupportMultipleWindows(android.webkit.WebView,boolean)
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
androidx.appcompat.widget.DialogTitle
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType valueOf(java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
okhttp3.Request$Builder: java.lang.String method
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.react.bridge.ReactBridge
com.facebook.react.uimanager.UIManagerModule
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
okhttp3.Request: java.util.Map tags
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.facebook.react.bridge.JavaMethodWrapper$5
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontSize(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.bridge.queue.MessageQueueThread: void runOnQueue(java.lang.Runnable)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.Cache$CacheRequestImpl: okio.Sink cacheOut
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(android.view.View,double)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection: boolean usingProxy()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.huc.OkHttpsURLConnection: long getHeaderFieldLong(java.lang.String,long)
com.facebook.react.bridge.ReactSoftException: ReactSoftException()
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
okhttp3.internal.cache.DiskLruCache: void rebuildJournal()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
com.horcrux.svg.RadialGradientView: void setFx(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
okio.AsyncTimeout: okio.AsyncTimeout head
androidx.annotation.Keep
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.horcrux.svg.SvgView: void setBbHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: void proceed()
okhttp3.internal.cache.DiskLruCache: long ANY_SEQUENCE_NUMBER
okhttp3.Response$Builder: okhttp3.Response cacheResponse
okhttp3.Response$Builder: okhttp3.Protocol protocol
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: boolean val$clearPrevious
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
com.horcrux.svg.SvgViewManager: void setMinY(com.horcrux.svg.SvgView,float)
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
okhttp3.internal.http2.Http2Writer: void close()
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
okhttp3.internal.http2.StreamResetException
okhttp3.ConnectionPool: int maxIdleConnections
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontWeight(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
okhttp3.internal.http2.Huffman: byte[] CODE_LENGTHS
com.facebook.react.bridge.ProxyJavaScriptExecutor
com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
okhttp3.internal.http1.Http1Codec: okio.Sink createRequestBody(okhttp3.Request,long)
okhttp3.internal.huc.OkHttpURLConnection: java.util.Set METHODS
com.reactnativecommunity.webview.RNCWebViewManager: void setLayerType(android.webkit.WebView,java.lang.String)
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
okhttp3.internal.ws.WebSocketReader: boolean closed
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: void execute()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
okhttp3.Dispatcher: int maxRequestsPerHost
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: boolean getBlurOnSubmit()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
okhttp3.internal.http1.Http1Codec: void flushRequest()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.Cache: int ENTRY_BODY
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source[] sources
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.util.Iterator mIterator
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView$RNCWebViewBridge: void postMessage(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.huc.OkHttpURLConnection: java.net.URL access$102(okhttp3.internal.huc.OkHttpURLConnection,java.net.URL)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
okhttp3.CacheControl: java.lang.String headerValue()
okhttp3.internal.huc.OutputStreamRequestBody: void initOutputStream(okio.BufferedSink,long)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.facebook.react.ReactRootView: void setRootViewTag(int)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.facebook.react.bridge.JavaModuleWrapper
okhttp3.Cache: void evictAll()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
okhttp3.internal.http2.Http2: java.lang.String formatFlags(byte,byte)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(com.horcrux.svg.LinearGradientView,int)
okhttp3.internal.cache2.Relay$RelaySource: long read(okio.Buffer,long)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
okhttp3.WebSocket: boolean close(int,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewModule: void startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.jni.DestructorThread
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
okhttp3.FormBody$Builder: java.util.List values
com.facebook.react.bridge.JSBundleLoader$2
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.PatternView: void setHeight(com.facebook.react.bridge.Dynamic)
okhttp3.Cookie$Builder: okhttp3.Cookie build()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
okhttp3.internal.http2.Http2Connection$PingRunnable: Http2Connection$PingRunnable(okhttp3.internal.http2.Http2Connection,boolean,int,int)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.facebook.react.bridge.ColorPropConverter
com.facebook.react.bridge.DynamicFromObject: int asInt()
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
okhttp3.FormBody: FormBody(java.util.List,java.util.List)
com.horcrux.svg.VirtualView
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
androidx.appcompat.widget.SearchView: int getInputType()
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
com.facebook.react.modules.datepicker.DatePickerDialogModule: DatePickerDialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
okhttp3.internal.http2.Http2Writer: void writeMedium(okio.BufferedSink,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(com.horcrux.svg.ImageView,java.lang.String)
okhttp3.internal.platform.Platform: byte[] concatLengthPrefixed(java.util.List)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseIfNoNewStreams()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
okhttp3.internal.cache.DiskLruCache: void initialize()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
okhttp3.Cache$CacheResponseBody$1: void close()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl(long)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
okhttp3.EventListener$2: EventListener$2(okhttp3.EventListener)
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDoOutput()
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
okhttp3.Cookie: okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.ws.RealWebSocket: boolean processNextFrame()
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okhttp3.RealCall: java.lang.String redactedUrl()
okhttp3.RealCall$AsyncCall: okhttp3.Request request()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
okhttp3.internal.http2.Header: java.lang.String toString()
okhttp3.Cookie: boolean secure
okhttp3.internal.http2.Http2: byte FLAG_END_PUSH_PROMISE
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame()
okhttp3.internal.huc.StreamedRequestBody: StreamedRequestBody(long)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
okio.Timeout: Timeout()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
